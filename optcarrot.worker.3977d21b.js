(()=>{var e,t,n,r,s="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};e={},t="Optcarrot",n=()=>ie,Object.defineProperty(e,t,{get:n,set:r,enumerable:!0,configurable:!0});const i=Symbol("Comlink.proxy"),a=Symbol("Comlink.endpoint"),o=Symbol("Comlink.releaseProxy"),l=Symbol("Comlink.thrown"),c=e=>"object"==typeof e&&null!==e||"function"==typeof e,u=new Map([["proxy",{canHandle:e=>c(e)&&e[i],serialize(e){const{port1:t,port2:n}=new MessageChannel;return f(e,t),[n,[n]]},deserialize(e){return e.start(),b(e,[],t);var t}}],["throw",{canHandle:e=>c(e)&&l in e,serialize({value:e}){let t;return t=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[t,[]]},deserialize(e){if(e.isError)throw Object.assign(new Error(e.value.message),e.value);throw e.value}}]]);function f(e,t=self){t.addEventListener("message",(function n(r){if(!r||!r.data)return;const{id:s,type:a,path:o}=Object.assign({path:[]},r.data),c=(r.data.argumentList||[]).map(w);let u;try{const t=o.slice(0,-1).reduce(((e,t)=>e[t]),e),n=o.reduce(((e,t)=>e[t]),e);switch(a){case"GET":u=n;break;case"SET":t[o.slice(-1)[0]]=w(r.data.value),u=!0;break;case"APPLY":u=n.apply(t,c);break;case"CONSTRUCT":{const e=new n(...c);h=e,u=Object.assign(h,{[i]:!0})}break;case"ENDPOINT":{const{port1:t,port2:n}=new MessageChannel;f(e,n),u=g(t,[t])}break;case"RELEASE":u=void 0;break;default:return}}catch(e){u={value:e,[l]:0}}var h;Promise.resolve(u).catch((e=>({value:e,[l]:0}))).then((e=>{const[r,i]=m(e);t.postMessage(Object.assign(Object.assign({},r),{id:s}),i),"RELEASE"===a&&(t.removeEventListener("message",n),d(t))}))})),t.start&&t.start()}function d(e){(function(e){return"MessagePort"===e.constructor.name})(e)&&e.close()}function h(e){if(e)throw new Error("Proxy has been released and is not useable")}function b(e,t=[],n=function(){}){let r=!1;const s=new Proxy(n,{get(n,i){if(h(r),i===o)return()=>y(e,{type:"RELEASE",path:t.map((e=>e.toString()))}).then((()=>{d(e),r=!0}));if("then"===i){if(0===t.length)return{then:()=>s};const n=y(e,{type:"GET",path:t.map((e=>e.toString()))}).then(w);return n.then.bind(n)}return b(e,[...t,i])},set(n,s,i){h(r);const[a,o]=m(i);return y(e,{type:"SET",path:[...t,s].map((e=>e.toString())),value:a},o).then(w)},apply(n,s,i){h(r);const o=t[t.length-1];if(o===a)return y(e,{type:"ENDPOINT"}).then(w);if("bind"===o)return b(e,t.slice(0,-1));const[l,c]=_(i);return y(e,{type:"APPLY",path:t.map((e=>e.toString())),argumentList:l},c).then(w)},construct(n,s){h(r);const[i,a]=_(s);return y(e,{type:"CONSTRUCT",path:t.map((e=>e.toString())),argumentList:i},a).then(w)}});return s}function _(e){const t=e.map(m);return[t.map((e=>e[0])),(n=t.map((e=>e[1])),Array.prototype.concat.apply([],n))];var n}const p=new WeakMap;function g(e,t){return p.set(e,t),e}function m(e){for(const[t,n]of u)if(n.canHandle(e)){const[r,s]=n.serialize(e);return[{type:"HANDLER",name:t,value:r},s]}return[{type:"RAW",value:e},p.get(e)||[]]}function w(e){switch(e.type){case"HANDLER":return u.get(e.name).deserialize(e.value);case"RAW":return e.value}}function y(e,t,n){return new Promise((r=>{const s=new Array(4).fill(0).map((()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16))).join("-");e.addEventListener("message",(function t(n){n.data&&n.data.id&&n.data.id===s&&(e.removeEventListener("message",t),r(n.data))})),e.start&&e.start(),e.postMessage(Object.assign({id:s},t),n)}))}class v{static read_bytes(e,t){const n=new v;return n.buf=e.getUint32(t,!0),n.buf_len=e.getUint32(t+4,!0),n}static read_bytes_array(e,t,n){const r=[];for(let s=0;s<n;s++)r.push(v.read_bytes(e,t+8*s));return r}}class j{static read_bytes(e,t){const n=new j;return n.buf=e.getUint32(t,!0),n.buf_len=e.getUint32(t+4,!0),n}static read_bytes_array(e,t,n){const r=[];for(let s=0;s<n;s++)r.push(j.read_bytes(e,t+8*s));return r}}class x{head_length(){return 24}name_length(){return this.dir_name.byteLength}write_head_bytes(e,t){e.setBigUint64(t,this.d_next,!0),e.setBigUint64(t+8,this.d_ino,!0),e.setUint32(t+16,this.dir_name.length,!0),e.setUint8(t+20,this.d_type)}write_name_bytes(e,t,n){e.set(this.dir_name.slice(0,Math.min(this.dir_name.byteLength,n)),t)}constructor(e,t,n){this.d_ino=1n;const r=(new TextEncoder).encode(t);this.d_next=e,this.d_namlen=r.byteLength,this.d_type=n,this.dir_name=r}}class k{write_bytes(e,t){e.setUint8(t,this.fs_filetype),e.setUint16(t+2,this.fs_flags,!0),e.setBigUint64(t+8,this.fs_rights_base,!0),e.setBigUint64(t+16,this.fs_rights_inherited,!0)}constructor(e,t){this.fs_rights_base=0n,this.fs_rights_inherited=0n,this.fs_filetype=e,this.fs_flags=t}}class A{write_bytes(e,t){e.setBigUint64(t,this.dev,!0),e.setBigUint64(t+8,this.ino,!0),e.setUint8(t+16,this.filetype),e.setBigUint64(t+24,this.nlink,!0),e.setBigUint64(t+32,this.size,!0),e.setBigUint64(t+38,this.atim,!0),e.setBigUint64(t+46,this.mtim,!0),e.setBigUint64(t+52,this.ctim,!0)}constructor(e,t){this.dev=0n,this.ino=0n,this.nlink=0n,this.atim=0n,this.mtim=0n,this.ctim=0n,this.filetype=e,this.size=t}}class S{write_bytes(e,t){e.setUint32(t,this.pr_name_len,!0)}constructor(e){this.pr_name_len=e}}class E{static dir(e){const t=new E;return t.tag=0,t.inner=new S(e),t}write_bytes(e,t){e.setUint32(t,this.tag,!0),this.inner.write_bytes(e,t+4)}}const I=new class{enable(e){this.log=function(e,t){if(e){return console.log.bind(console,"%c%s","color: #265BA0",t)}return()=>{}}(void 0===e||e,this.prefix)}get enabled(){return this.isEnabled}constructor(e){this.isEnabled=e,this.prefix="wasi:",this.enable(e)}}(!1);class T{fd_advise(e,t,n){return-1}fd_allocate(e,t){return-1}fd_close(){return 0}fd_datasync(){return-1}fd_fdstat_get(){return{ret:-1,fdstat:null}}fd_fdstat_set_flags(e){return-1}fd_fdstat_set_rights(e,t){return-1}fd_filestat_get(){return{ret:-1,filestat:null}}fd_filestat_set_size(e){return-1}fd_filestat_set_times(e,t,n){return-1}fd_pread(e,t,n){return{ret:-1,nread:0}}fd_prestat_get(){return{ret:-1,prestat:null}}fd_prestat_dir_name(){return{ret:-1,prestat_dir_name:null}}fd_pwrite(e,t,n){return{ret:-1,nwritten:0}}fd_read(e,t){return{ret:-1,nread:0}}fd_readdir_single(e){return{ret:-1,dirent:null}}fd_seek(e,t){return{ret:-1,offset:0n}}fd_sync(){return 0}fd_tell(){return{ret:-1,offset:0n}}fd_write(e,t){return{ret:-1,nwritten:0}}path_create_directory(e){return-1}path_filestat_get(e,t){return{ret:-1,filestat:null}}path_filestat_set_times(e,t,n,r,s){return-1}path_link(e,t,n,r){return-1}path_open(e,t,n,r,s,i){return{ret:-1,fd_obj:null}}path_readlink(e){return{ret:-1,data:null}}path_remove_directory(e){return-1}path_rename(e,t,n){return-1}path_symlink(e,t){return-1}path_unlink_file(e){return-1}}class U extends T{fd_fdstat_get(){return{ret:0,fdstat:new k(4,0)}}fd_read(e,t){let n=0;for(const r of t){if(!(this.file_pos<this.file.data.byteLength))break;{const t=this.file.data.slice(Number(this.file_pos),Number(this.file_pos+BigInt(r.buf_len)));e.set(t,r.buf),this.file_pos+=BigInt(t.length),n+=t.length}}return{ret:0,nread:n}}fd_pread(e,t,n){let r=0;for(const s of t){if(!(n<this.file.data.byteLength))break;{const t=this.file.data.slice(Number(n),Number(n+BigInt(s.buf_len)));e.set(t,s.buf),n+=BigInt(t.length),r+=t.length}}return{ret:0,nread:r}}fd_seek(e,t){let n;switch(t){case 0:n=e;break;case 1:n=this.file_pos+e;break;case 2:n=BigInt(this.file.data.byteLength)+e;break;default:return{ret:28,offset:0n}}return n<0?{ret:28,offset:0n}:(this.file_pos=n,{ret:0,offset:this.file_pos})}fd_write(e,t){let n=0;if(this.file.readonly)return{ret:8,nwritten:n};for(const r of t){const t=e.slice(r.buf,r.buf+r.buf_len);if(this.file_pos+BigInt(t.byteLength)>this.file.size){const e=this.file.data;this.file.data=new Uint8Array(Number(this.file_pos+BigInt(t.byteLength))),this.file.data.set(e)}this.file.data.set(t.slice(0,Number(this.file.size-this.file_pos)),Number(this.file_pos)),this.file_pos+=BigInt(t.byteLength),n+=r.buf_len}return{ret:0,nwritten:n}}fd_filestat_get(){return{ret:0,filestat:this.file.stat()}}constructor(e){super(),this.file_pos=0n,this.file=e}}class O extends T{fd_fdstat_get(){return{ret:0,fdstat:new k(3,0)}}fd_readdir_single(e){if(I.enabled&&(I.log("readdir_single",e),I.log(e,Object.keys(this.dir.contents))),I.log(e,Object.keys(this.dir.contents).slice(Number(e))),e>=BigInt(Object.keys(this.dir.contents).length))return{ret:0,dirent:null};const t=Object.keys(this.dir.contents)[Number(e)],n=this.dir.contents[t];return{ret:0,dirent:new x(e+1n,t,n.stat().filetype)}}path_filestat_get(e,t){const n=this.dir.get_entry_for_path(t);return null==n?{ret:44,filestat:null}:{ret:0,filestat:n.stat()}}path_open(e,t,n,r,s,i){let a=this.dir.get_entry_for_path(t);if(null==a){if(1!=(1&n))return{ret:44,fd_obj:null};a=this.dir.create_entry_for_path(t,2==(2&n))}else if(4==(4&n))return{ret:20,fd_obj:null};if(2==(2&n)&&3!==a.stat().filetype)return{ret:54,fd_obj:null};if(a.readonly&&(r&BigInt(64))==BigInt(64))return{ret:63,fd_obj:null};if(!(a instanceof J)&&8==(8&n)){const e=a.truncate();if(0!=e)return{ret:e,fd_obj:null}}return{ret:0,fd_obj:a.open(i)}}path_create_directory(e){return this.path_open(0,e,3,0n,0n,0).ret}constructor(e){super(),this.dir=e}}class V extends O{fd_prestat_get(){return{ret:0,prestat:E.dir(this.prestat_name.length)}}fd_prestat_dir_name(){return{ret:0,prestat_dir_name:this.prestat_name}}constructor(e,t){super(new J(t)),this.prestat_name=(new TextEncoder).encode(e)}}class R{open(e){const t=new U(this);return 1&e&&t.fd_seek(0n,2),t}get size(){return BigInt(this.data.byteLength)}stat(){return new A(4,this.size)}truncate(){return this.readonly?63:(this.data=new Uint8Array([]),0)}constructor(e,t){this.data=new Uint8Array(e),this.readonly=!!t?.readonly}}class J{open(e){return new O(this)}stat(){return new A(3,0n)}get_entry_for_path(e){let t=this;for(const n of e.split("/")){if(""==n)break;if("."!=n){if(!(t instanceof J))return null;if(null==t.contents[n])return I.log(n),null;t=t.contents[n]}}return t}create_entry_for_path(e,t){let n=this;const r=e.split("/").filter((e=>"/"!=e));for(let e=0;e<r.length;e++){const s=r[e];if(!(n instanceof J))break;null!=n.contents[s]||(I.log("create",s),e!=r.length-1||t?n.contents[s]=new J({}):n.contents[s]=new R(new ArrayBuffer(0))),n=n.contents[s]}return n}constructor(e){this.readonly=!1,this.contents=e}}let P=new DataView(new ArrayBuffer);function F(e){return P.buffer!==e.buffer&&(P=new DataView(e.buffer)),P}const B=new TextDecoder("utf-8"),D=new TextEncoder("utf-8");function N(e,t,n){if("string"!=typeof e)throw new TypeError("expected a string");if(0===e.length)return M=0,1;let r=0,s=0,i=0;for(;e.length>0;){s=t(s,r,1,r+e.length),r+=e.length;const{read:a,written:o}=D.encodeInto(e,new Uint8Array(n.buffer,s+i,r-i));i+=o,e=e.slice(a)}return r>i&&(s=t(s,r,1,i)),M=i,s}let M=0;class C{constructor(){this.list=[],this.head=0}insert(e){this.head>=this.list.length&&this.list.push({next:this.list.length+1,val:void 0});const t=this.head,n=this.list[t];return this.head=n.next,n.next=-1,n.val=e,t}get(e){if(e>=this.list.length)throw new RangeError("handle index not valid");const t=this.list[e];if(-1===t.next)return t.val;throw new RangeError("handle index not valid")}remove(e){const t=this.get(e),n=this.list[e];return n.val=void 0,n.next=this.head,this.head=e,t}}function L(){throw new RangeError("invalid variant discriminant for bool")}class z{constructor(){this._resource0_slab=new C,this._resource1_slab=new C}addToImports(e){"canonical_abi"in e||(e.canonical_abi={}),e.canonical_abi["resource_drop_rb-iseq"]=e=>{this._resource0_slab.remove(e).drop()},e.canonical_abi["resource_clone_rb-iseq"]=e=>{const t=this._resource0_slab.get(e);return this._resource0_slab.insert(t.clone())},e.canonical_abi["resource_get_rb-iseq"]=e=>this._resource0_slab.get(e)._wasm_val,e.canonical_abi["resource_new_rb-iseq"]=e=>(this._registry0,this._resource0_slab.insert(new q(e,this))),e.canonical_abi["resource_drop_rb-abi-value"]=e=>{this._resource1_slab.remove(e).drop()},e.canonical_abi["resource_clone_rb-abi-value"]=e=>{const t=this._resource1_slab.get(e);return this._resource1_slab.insert(t.clone())},e.canonical_abi["resource_get_rb-abi-value"]=e=>this._resource1_slab.get(e)._wasm_val,e.canonical_abi["resource_new_rb-abi-value"]=e=>(this._registry1,this._resource1_slab.insert(new W(e,this)))}async instantiate(e,t){if(t=t||{},this.addToImports(t),e instanceof WebAssembly.Instance)this.instance=e;else if(e instanceof WebAssembly.Module)this.instance=await WebAssembly.instantiate(e,t);else if(e instanceof ArrayBuffer||e instanceof Uint8Array){const{instance:n}=await WebAssembly.instantiate(e,t);this.instance=n}else{const{instance:n}=await WebAssembly.instantiateStreaming(e,t);this.instance=n}this._exports=this.instance.exports,this._registry0=new FinalizationRegistry(this._exports["canonical_abi_drop_rb-iseq"]),this._registry1=new FinalizationRegistry(this._exports["canonical_abi_drop_rb-abi-value"])}rubyShowVersion(){this._exports["ruby-show-version: func() -> ()"]()}rubyInit(){this._exports["ruby-init: func() -> ()"]()}rubySysinit(e){const t=this._exports.memory,n=this._exports.cabi_realloc,r=e,s=r.length,i=n(0,0,4,8*s);for(let e=0;e<r.length;e++){const s=i+8*e,a=N(r[e],n,t),o=M;F(t).setInt32(s+4,o,!0),F(t).setInt32(s+0,a,!0)}this._exports["ruby-sysinit: func(args: list<string>) -> ()"](i,s)}rubyOptions(e){const t=this._exports.memory,n=this._exports.cabi_realloc,r=e,s=r.length,i=n(0,0,4,8*s);for(let e=0;e<r.length;e++){const s=i+8*e,a=N(r[e],n,t),o=M;F(t).setInt32(s+4,o,!0),F(t).setInt32(s+0,a,!0)}const a=this._exports["ruby-options: func(args: list<string>) -> handle<rb-iseq>"](i,s);return this._resource0_slab.remove(a)}rubyScript(e){const t=this._exports.memory,n=N(e,this._exports.cabi_realloc,t),r=M;this._exports["ruby-script: func(name: string) -> ()"](n,r)}rubyInitLoadpath(){this._exports["ruby-init-loadpath: func() -> ()"]()}rbEvalStringProtect(e){const t=this._exports.memory,n=N(e,this._exports.cabi_realloc,t),r=M,s=this._exports["rb-eval-string-protect: func(str: string) -> tuple<handle<rb-abi-value>, s32>"](n,r);return[this._resource1_slab.remove(F(t).getInt32(s+0,!0)),F(t).getInt32(s+4,!0)]}rbFuncallvProtect(e,t,n){const r=this._exports.memory,s=this._exports.cabi_realloc,i=e;if(!(i instanceof W))throw new TypeError("expected instance of RbAbiValue");const a=n,o=a.length,l=s(0,0,4,4*o);for(let e=0;e<a.length;e++){const t=l+4*e,n=a[e];if(!(n instanceof W))throw new TypeError("expected instance of RbAbiValue");F(r).setInt32(t+0,this._resource1_slab.insert(n.clone()),!0)}const c=this._exports["rb-funcallv-protect: func(recv: handle<rb-abi-value>, mid: u32, args: list<handle<rb-abi-value>>) -> tuple<handle<rb-abi-value>, s32>"](this._resource1_slab.insert(i.clone()),t>>>0,l,o);return[this._resource1_slab.remove(F(r).getInt32(c+0,!0)),F(r).getInt32(c+4,!0)]}rbIntern(e){const t=this._exports.memory,n=N(e,this._exports.cabi_realloc,t),r=M;return this._exports["rb-intern: func(name: string) -> u32"](n,r)>>>0}rbErrinfo(){const e=this._exports["rb-errinfo: func() -> handle<rb-abi-value>"]();return this._resource1_slab.remove(e)}rbClearErrinfo(){this._exports["rb-clear-errinfo: func() -> ()"]()}rstringPtr(e){const t=this._exports.memory,n=e;if(!(n instanceof W))throw new TypeError("expected instance of RbAbiValue");const r=this._exports["rstring-ptr: func(value: handle<rb-abi-value>) -> string"](this._resource1_slab.insert(n.clone())),s=F(t).getInt32(r+0,!0),i=F(t).getInt32(r+4,!0),a=B.decode(new Uint8Array(t.buffer,s,i));return this._exports["cabi_post_rstring-ptr"](r),a}rbVmBugreport(){this._exports["rb-vm-bugreport: func() -> ()"]()}rbGcEnable(){const e=this._exports["rb-gc-enable: func() -> bool"]();return 0!=e&&(1==e||L())}rbGcDisable(){const e=this._exports["rb-gc-disable: func() -> bool"]();return 0!=e&&(1==e||L())}rbSetShouldProhibitRewind(e){const t=this._exports["rb-set-should-prohibit-rewind: func(new-value: bool) -> bool"](e?1:0);return 0!=t&&(1==t||L())}}class q{constructor(e,t){this._wasm_val=e,this._obj=t,this._refcnt=1,t._registry0.register(this,e,this)}clone(){return this._refcnt+=1,this}drop(){if(this._refcnt-=1,0!==this._refcnt)return;this._obj._registry0.unregister(this);const e=this._obj._exports["canonical_abi_drop_rb-iseq"],t=this._wasm_val;delete this._obj,delete this._refcnt,delete this._wasm_val,e(t)}}class W{constructor(e,t){this._wasm_val=e,this._obj=t,this._refcnt=1,t._registry1.register(this,e,this)}clone(){return this._refcnt+=1,this}drop(){if(this._refcnt-=1,0!==this._refcnt)return;this._obj._registry1.unregister(this);const e=this._obj._exports["canonical_abi_drop_rb-abi-value"],t=this._wasm_val;delete this._obj,delete this._refcnt,delete this._wasm_val,e(t)}}class G{constructor(){this.instance=null,this.interfaceState={hasJSFrameAfterRbFrame:!1};this.guest=(e=>{const t=["constructor"].concat(["addToImports","instantiate","rbSetShouldProhibitRewind","rbGcDisable","rbGcEnable"]);for(const n of Object.getOwnPropertyNames(z.prototype)){if(t.includes(n))continue;const r=e[n];"function"==typeof r&&(e[n]=(...t)=>{if(this.interfaceState.hasJSFrameAfterRbFrame){const n=this.guest.rbSetShouldProhibitRewind(!0),s=this.guest.rbGcDisable(),i=Reflect.apply(r,e,t);return this.guest.rbSetShouldProhibitRewind(n),s||this.guest.rbGcEnable(),i}return Reflect.apply(r,e,t)})}return e})(new z),this.transport=new $,this.exceptionFormatter=new Y}initialize(e=["ruby.wasm","--disable-gems","-EUTF-8","-e_=0"]){const t=e.map((e=>e+"\0"));this.guest.rubyInit(),this.guest.rubySysinit(t),this.guest.rubyOptions(t)}async setInstance(e){this.instance=e,await this.guest.instantiate(e)}addToImports(e){function t(e){return(...t)=>{try{return{tag:"success",val:e(...t)}}catch(e){if(e instanceof re)throw e;return{tag:"failure",val:e}}}}this.guest.addToImports(e),e["rb-js-abi-host"]={rb_wasm_throw_prohibit_rewind_exception:(e,t)=>{const n=this.instance.exports.memory,r=(new TextDecoder).decode(new Uint8Array(n.buffer,e,t));throw new re(`Ruby APIs that may rewind the VM stack are prohibited under nested VM operation (${r})\nNested VM operation means that the call stack has sandwitched JS frames like JS -> Ruby -> JS -> Ruby caused by something like \`window.rubyVM.eval("JS.global[:rubyVM].eval('Fiber.yield')")\`\n\nPlease check your call stack and make sure that you are **not** doing any of the following inside the nested Ruby frame:\n  1. Switching fibers (e.g. Fiber#resume, Fiber.yield, and Fiber#transfer)\n     Note that \`evalAsync\` JS API switches fibers internally\n  2. Raising uncaught exceptions\n     Please catch all exceptions inside the nested operation\n  3. Calling Continuation APIs\n`)}};!function(e,t,n){"rb-js-abi-host"in e||(e["rb-js-abi-host"]={}),e["rb-js-abi-host"]["eval-js: func(code: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(e,s,i){const a=n("memory"),o=e,l=s,c=B.decode(new Uint8Array(a.buffer,o,l)),u=t.evalJs(c);switch(u.tag){case"success":{const e=u.val;F(a).setInt8(i+0,0,!0),F(a).setInt32(i+4,r.insert(e),!0);break}case"failure":{const e=u.val;F(a).setInt8(i+0,1,!0),F(a).setInt32(i+4,r.insert(e),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},e["rb-js-abi-host"]["is-js: func(value: handle<js-abi-value>) -> bool"]=function(e){return t.isJs(r.get(e))?1:0},e["rb-js-abi-host"]["instance-of: func(value: handle<js-abi-value>, klass: handle<js-abi-value>) -> bool"]=function(e,n){return t.instanceOf(r.get(e),r.get(n))?1:0},e["rb-js-abi-host"]["global-this: func() -> handle<js-abi-value>"]=function(){const e=t.globalThis();return r.insert(e)},e["rb-js-abi-host"]["int-to-js-number: func(value: s32) -> handle<js-abi-value>"]=function(e){const n=t.intToJsNumber(e);return r.insert(n)},e["rb-js-abi-host"]["float-to-js-number: func(value: float64) -> handle<js-abi-value>"]=function(e){const n=t.floatToJsNumber(e);return r.insert(n)},e["rb-js-abi-host"]["string-to-js-string: func(value: string) -> handle<js-abi-value>"]=function(e,s){const i=n("memory"),a=e,o=s,l=B.decode(new Uint8Array(i.buffer,a,o)),c=t.stringToJsString(l);return r.insert(c)},e["rb-js-abi-host"]["bool-to-js-bool: func(value: bool) -> handle<js-abi-value>"]=function(e){const n=e,s=t.boolToJsBool(0!=n&&(1==n||L()));return r.insert(s)},e["rb-js-abi-host"]["proc-to-js-function: func(value: u32) -> handle<js-abi-value>"]=function(e){const n=t.procToJsFunction(e>>>0);return r.insert(n)},e["rb-js-abi-host"]["rb-object-to-js-rb-value: func(raw-rb-abi-value: u32) -> handle<js-abi-value>"]=function(e){const n=t.rbObjectToJsRbValue(e>>>0);return r.insert(n)},e["rb-js-abi-host"]["js-value-to-string: func(value: handle<js-abi-value>) -> string"]=function(e,s){const i=n("memory"),a=n("cabi_realloc"),o=N(t.jsValueToString(r.get(e)),a,i),l=M;F(i).setInt32(s+4,l,!0),F(i).setInt32(s+0,o,!0)},e["rb-js-abi-host"]["js-value-to-integer: func(value: handle<js-abi-value>) -> variant { f64(float64), bignum(string) }"]=function(e,s){const i=n("memory"),a=n("cabi_realloc"),o=t.jsValueToInteger(r.get(e));switch(o.tag){case"f64":{const e=o.val;F(i).setInt8(s+0,0,!0),F(i).setFloat64(s+8,+e,!0);break}case"bignum":{const e=o.val;F(i).setInt8(s+0,1,!0);const t=N(e,a,i),n=M;F(i).setInt32(s+12,n,!0),F(i).setInt32(s+8,t,!0);break}default:throw new RangeError("invalid variant specified for RawInteger")}},e["rb-js-abi-host"]["export-js-value-to-host: func(value: handle<js-abi-value>) -> ()"]=function(e){t.exportJsValueToHost(r.get(e))},e["rb-js-abi-host"]["import-js-value-from-host: func() -> handle<js-abi-value>"]=function(){const e=t.importJsValueFromHost();return r.insert(e)},e["rb-js-abi-host"]["js-value-typeof: func(value: handle<js-abi-value>) -> string"]=function(e,s){const i=n("memory"),a=n("cabi_realloc"),o=N(t.jsValueTypeof(r.get(e)),a,i),l=M;F(i).setInt32(s+4,l,!0),F(i).setInt32(s+0,o,!0)},e["rb-js-abi-host"]["js-value-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool"]=function(e,n){return t.jsValueEqual(r.get(e),r.get(n))?1:0},e["rb-js-abi-host"]["js-value-strictly-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool"]=function(e,n){return t.jsValueStrictlyEqual(r.get(e),r.get(n))?1:0},e["rb-js-abi-host"]["reflect-apply: func(target: handle<js-abi-value>, this-argument: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(e,s,i,a,o){const l=n("memory"),c=a,u=i,f=[];for(let e=0;e<c;e++){const t=u+4*e;f.push(r.get(F(l).getInt32(t+0,!0)))}const d=t.reflectApply(r.get(e),r.get(s),f);switch(d.tag){case"success":{const e=d.val;F(l).setInt8(o+0,0,!0),F(l).setInt32(o+4,r.insert(e),!0);break}case"failure":{const e=d.val;F(l).setInt8(o+0,1,!0),F(l).setInt32(o+4,r.insert(e),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},e["rb-js-abi-host"]["reflect-construct: func(target: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> handle<js-abi-value>"]=function(e,s,i){const a=n("memory"),o=i,l=s,c=[];for(let e=0;e<o;e++){const t=l+4*e;c.push(r.get(F(a).getInt32(t+0,!0)))}const u=t.reflectConstruct(r.get(e),c);return r.insert(u)},e["rb-js-abi-host"]["reflect-delete-property: func(target: handle<js-abi-value>, property-key: string) -> bool"]=function(e,s,i){const a=n("memory"),o=s,l=i,c=B.decode(new Uint8Array(a.buffer,o,l));return t.reflectDeleteProperty(r.get(e),c)?1:0},e["rb-js-abi-host"]["reflect-get: func(target: handle<js-abi-value>, property-key: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(e,s,i,a){const o=n("memory"),l=s,c=i,u=B.decode(new Uint8Array(o.buffer,l,c)),f=t.reflectGet(r.get(e),u);switch(f.tag){case"success":{const e=f.val;F(o).setInt8(a+0,0,!0),F(o).setInt32(a+4,r.insert(e),!0);break}case"failure":{const e=f.val;F(o).setInt8(a+0,1,!0),F(o).setInt32(a+4,r.insert(e),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},e["rb-js-abi-host"]["reflect-get-own-property-descriptor: func(target: handle<js-abi-value>, property-key: string) -> handle<js-abi-value>"]=function(e,s,i){const a=n("memory"),o=s,l=i,c=B.decode(new Uint8Array(a.buffer,o,l)),u=t.reflectGetOwnPropertyDescriptor(r.get(e),c);return r.insert(u)},e["rb-js-abi-host"]["reflect-get-prototype-of: func(target: handle<js-abi-value>) -> handle<js-abi-value>"]=function(e){const n=t.reflectGetPrototypeOf(r.get(e));return r.insert(n)},e["rb-js-abi-host"]["reflect-has: func(target: handle<js-abi-value>, property-key: string) -> bool"]=function(e,s,i){const a=n("memory"),o=s,l=i,c=B.decode(new Uint8Array(a.buffer,o,l));return t.reflectHas(r.get(e),c)?1:0},e["rb-js-abi-host"]["reflect-is-extensible: func(target: handle<js-abi-value>) -> bool"]=function(e){return t.reflectIsExtensible(r.get(e))?1:0},e["rb-js-abi-host"]["reflect-own-keys: func(target: handle<js-abi-value>) -> list<handle<js-abi-value>>"]=function(e,s){const i=n("memory"),a=n("cabi_realloc"),o=t.reflectOwnKeys(r.get(e)),l=o.length,c=a(0,0,4,4*l);for(let e=0;e<o.length;e++){const t=o[e],n=c+4*e;F(i).setInt32(n+0,r.insert(t),!0)}F(i).setInt32(s+4,l,!0),F(i).setInt32(s+0,c,!0)},e["rb-js-abi-host"]["reflect-prevent-extensions: func(target: handle<js-abi-value>) -> bool"]=function(e){return t.reflectPreventExtensions(r.get(e))?1:0},e["rb-js-abi-host"]["reflect-set: func(target: handle<js-abi-value>, property-key: string, value: handle<js-abi-value>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }"]=function(e,s,i,a,o){const l=n("memory"),c=s,u=i,f=B.decode(new Uint8Array(l.buffer,c,u)),d=t.reflectSet(r.get(e),f,r.get(a));switch(d.tag){case"success":{const e=d.val;F(l).setInt8(o+0,0,!0),F(l).setInt32(o+4,r.insert(e),!0);break}case"failure":{const e=d.val;F(l).setInt8(o+0,1,!0),F(l).setInt32(o+4,r.insert(e),!0);break}default:throw new RangeError("invalid variant specified for JsAbiResult")}},e["rb-js-abi-host"]["reflect-set-prototype-of: func(target: handle<js-abi-value>, prototype: handle<js-abi-value>) -> bool"]=function(e,n){return t.reflectSetPrototypeOf(r.get(e),r.get(n))?1:0},"canonical_abi"in e||(e.canonical_abi={});const r=new C;e.canonical_abi["resource_drop_js-abi-value"]=e=>{const n=r.remove(e);t.dropJsAbiValue&&t.dropJsAbiValue(n)}}(e,(e=>{for(const[t,n]of Object.entries(e))"function"==typeof n&&(e[t]=(...t)=>{const r=this.interfaceState.hasJSFrameAfterRbFrame;this.interfaceState.hasJSFrameAfterRbFrame=!0;const s=Reflect.apply(n,e,t);return this.interfaceState.hasJSFrameAfterRbFrame=r,s});return e})({evalJs:t((e=>Function(e)())),isJs:e=>!0,globalThis:()=>{if("undefined"!=typeof globalThis)return globalThis;if(void 0!==s)return s;if("undefined"!=typeof window)return window;throw new Error("unable to locate global object")},intToJsNumber:e=>e,floatToJsNumber:e=>e,stringToJsString:e=>e,boolToJsBool:e=>e,procToJsFunction:e=>{const t=this.rbValueOfPointer(e);return(...e)=>{t.call("call",...e.map((e=>this.wrap(e))))}},rbObjectToJsRbValue:e=>this.rbValueOfPointer(e),jsValueToString:e=>String(e),jsValueToInteger:e=>"number"==typeof e?{tag:"f64",val:e}:"bigint"==typeof e?{tag:"bignum",val:BigInt(e).toString(10)+"\0"}:"string"==typeof e?{tag:"bignum",val:e+"\0"}:void 0===e?{tag:"f64",val:0}:{tag:"f64",val:Number(e)},exportJsValueToHost:e=>{this.transport.takeJsValue(e)},importJsValueFromHost:()=>this.transport.consumeJsValue(),instanceOf:(e,t)=>"function"==typeof t&&e instanceof t,jsValueTypeof:e=>typeof e,jsValueEqual:(e,t)=>e==t,jsValueStrictlyEqual:(e,t)=>e===t,reflectApply:t(((e,t,n)=>Reflect.apply(e,t,n))),reflectConstruct:function(e,t){throw new Error("Function not implemented.")},reflectDeleteProperty:function(e,t){throw new Error("Function not implemented.")},reflectGet:t(((e,t)=>e[t])),reflectGetOwnPropertyDescriptor:function(e,t){throw new Error("Function not implemented.")},reflectGetPrototypeOf:function(e){throw new Error("Function not implemented.")},reflectHas:function(e,t){throw new Error("Function not implemented.")},reflectIsExtensible:function(e){throw new Error("Function not implemented.")},reflectOwnKeys:function(e){throw new Error("Function not implemented.")},reflectPreventExtensions:function(e){throw new Error("Function not implemented.")},reflectSet:t(((e,t,n)=>Reflect.set(e,t,n))),reflectSetPrototypeOf:function(e,t){throw new Error("Function not implemented.")}}),(e=>this.instance.exports[e]))}printVersion(){this.guest.rubyShowVersion()}eval(e){return te(this,this.privateObject(),e)}evalAsync(e){const t=this.eval("require 'js'; JS");return new Promise(((n,r)=>{t.call("__eval_async_rb",this.wrap(e),this.wrap({resolve:n,reject:e=>{r(new ne(this.exceptionFormatter.format(e,this,this.privateObject())))}}))}))}wrap(e){return this.transport.importJsValue(e,this)}privateObject(){return{transport:this.transport,exceptionFormatter:this.exceptionFormatter}}rbValueOfPointer(e){const t=new W(e,this.guest);return new H(t,this,this.privateObject())}}class ${constructor(){this._takenJsValue=null}takeJsValue(e){this._takenJsValue=e}consumeJsValue(){return this._takenJsValue}exportJsValue(e){return e.call("__export_to_js"),this._takenJsValue}importJsValue(e,t){return this._takenJsValue=e,t.eval('require "js"; JS::Object').call("__import_from_js")}}class H{constructor(e,t,n){this.inner=e,this.vm=t,this.privateObject=n}call(e,...t){const n=t.map((e=>e.inner));return new H(ee(this.vm,this.privateObject,this.inner,e,n),this.vm,this.privateObject)}[Symbol.toPrimitive](e){return"string"===e||"default"===e?this.toString():null}toString(){const e=ee(this.vm,this.privateObject,this.inner,"to_s",[]);return this.vm.guest.rstringPtr(e)}toJS(){const e=this.vm.eval("JS").call("try_convert",this);return"true"===e.call("nil?").toString()?null:this.privateObject.transport.exportJsValue(e)}}var K,X;(X=K||(K={}))[X.None=0]="None",X[X.Return=1]="Return",X[X.Break=2]="Break",X[X.Next=3]="Next",X[X.Retry=4]="Retry",X[X.Redo=5]="Redo",X[X.Raise=6]="Raise",X[X.Throw=7]="Throw",X[X.Fatal=8]="Fatal",X[X.Mask=15]="Mask";class Y{constructor(){this.literalsCache=null}format(e,t,n){const[r,s,i]=(()=>{if(null==this.literalsCache){const e=[te(t,n,"0"),te(t,n,"1"),te(t,n,'"\n"')];return this.literalsCache=e,e}return this.literalsCache})(),a=e.call("backtrace");if("true"===a.call("nil?").toString())return this.formatString(e.call("class").toString(),e.toString());const o=a.call("at",r),l=a.call("drop",s).call("join",i);return this.formatString(e.call("class").toString(),e.toString(),[o.toString(),l.toString()])}formatString(e,t,n){return n?`${n[0]}: ${t} (${e})\n${n[1]}`:`${e}: ${t}`}}const Q=(e,t,n)=>{switch(e&K.Mask){case K.None:break;case K.Return:throw new ne("unexpected return");case K.Next:throw new ne("unexpected next");case K.Break:throw new ne("unexpected break");case K.Redo:throw new ne("unexpected redo");case K.Retry:throw new ne("retry outside of rescue clause");case K.Throw:throw new ne("unexpected throw");case K.Raise:case K.Fatal:const r=new H(t.guest.rbErrinfo(),t,n);if("true"===r.call("nil?").toString())throw new ne("no exception object");throw t.guest.rbClearErrinfo(),new ne(n.exceptionFormatter.format(r,t,n));default:throw new ne(`unknown error tag: ${e}`)}};function Z(e,t){try{return t()}catch(t){if(t instanceof ne)throw t;if(e.guest.rbVmBugreport(),t instanceof WebAssembly.RuntimeError&&"unreachable"===t.message){const e=new ne(`Something went wrong in Ruby VM: ${t}`);throw e.stack=t.stack,e}throw t}}const ee=(e,t,n,r,s)=>{const i=e.guest.rbIntern(r+"\0");return Z(e,(()=>{const[r,a]=e.guest.rbFuncallvProtect(n,i,s);return Q(a,e,t),r}))},te=(e,t,n)=>Z(e,(()=>{const[r,s]=e.guest.rbEvalStringProtect(n+"\0");return Q(s,e,t),new H(r,e,t)}));class ne extends Error{constructor(e){super(e)}}class re extends ne{constructor(e){super("Ruby Fatal Error: "+e)}}class se{constructor(e){this.buffer=e}consume(){return 0===this.buffer.length?null:this.buffer.shift()}push(e,t){this.buffer.push([e,t])}}class ie{constructor(){this.rootFs={};const e={};e.OPTCARROT_TMP=new J({}),this.rootFs=e;this.wasi=new class{start(e){this.inst=e,e.exports._start()}initialize(e){this.inst=e,e.exports._initialize()}constructor(e,t,n,r={}){this.args=[],this.env=[],this.fds=[],I.enable(r.debug),this.args=e,this.env=t,this.fds=n;const s=this;this.wasiImport={args_sizes_get(e,t){const n=new DataView(s.inst.exports.memory.buffer);n.setUint32(e,s.args.length,!0);let r=0;for(const e of s.args)r+=e.length+1;return n.setUint32(t,r,!0),I.log(n.getUint32(e,!0),n.getUint32(t,!0)),0},args_get(e,t){const n=new DataView(s.inst.exports.memory.buffer),r=new Uint8Array(s.inst.exports.memory.buffer),i=t;for(let i=0;i<s.args.length;i++){n.setUint32(e,t,!0),e+=4;const a=(new TextEncoder).encode(s.args[i]);r.set(a,t),n.setUint8(t+a.length,0),t+=a.length+1}return I.enabled&&I.log(new TextDecoder("utf-8").decode(r.slice(i,t))),0},environ_sizes_get(e,t){const n=new DataView(s.inst.exports.memory.buffer);n.setUint32(e,s.env.length,!0);let r=0;for(const e of s.env)r+=e.length+1;return n.setUint32(t,r,!0),I.log(n.getUint32(e,!0),n.getUint32(t,!0)),0},environ_get(e,t){const n=new DataView(s.inst.exports.memory.buffer),r=new Uint8Array(s.inst.exports.memory.buffer),i=t;for(let i=0;i<s.env.length;i++){n.setUint32(e,t,!0),e+=4;const a=(new TextEncoder).encode(s.env[i]);r.set(a,t),n.setUint8(t+a.length,0),t+=a.length+1}return I.enabled&&I.log(new TextDecoder("utf-8").decode(r.slice(i,t))),0},clock_res_get(e,t){throw"unimplemented"},clock_time_get(e,t,n){const r=new DataView(s.inst.exports.memory.buffer);if(0===e)r.setBigUint64(n,1000000n*BigInt((new Date).getTime()),!0);else if(1==e){let e;try{e=BigInt(Math.round(1e6*performance.now()))}catch(t){e=0n}r.setBigUint64(n,e,!0)}else r.setBigUint64(n,0n,!0);return 0},fd_advise:(e,t,n,r)=>null!=s.fds[e]?s.fds[e].fd_advise(t,n,r):8,fd_allocate:(e,t,n)=>null!=s.fds[e]?s.fds[e].fd_allocate(t,n):8,fd_close(e){if(null!=s.fds[e]){const t=s.fds[e].fd_close();return s.fds[e]=void 0,t}return 8},fd_datasync:e=>null!=s.fds[e]?s.fds[e].fd_datasync():8,fd_fdstat_get(e,t){if(null!=s.fds[e]){const{ret:n,fdstat:r}=s.fds[e].fd_fdstat_get();return null!=r&&r.write_bytes(new DataView(s.inst.exports.memory.buffer),t),n}return 8},fd_fdstat_set_flags:(e,t)=>null!=s.fds[e]?s.fds[e].fd_fdstat_set_flags(t):8,fd_fdstat_set_rights:(e,t,n)=>null!=s.fds[e]?s.fds[e].fd_fdstat_set_rights(t,n):8,fd_filestat_get(e,t){if(null!=s.fds[e]){const{ret:n,filestat:r}=s.fds[e].fd_filestat_get();return null!=r&&r.write_bytes(new DataView(s.inst.exports.memory.buffer),t),n}return 8},fd_filestat_set_size:(e,t)=>null!=s.fds[e]?s.fds[e].fd_filestat_set_size(t):8,fd_filestat_set_times:(e,t,n,r)=>null!=s.fds[e]?s.fds[e].fd_filestat_set_times(t,n,r):8,fd_pread(e,t,n,r,i){const a=new DataView(s.inst.exports.memory.buffer),o=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const l=v.read_bytes_array(a,t,n),{ret:c,nread:u}=s.fds[e].fd_pread(o,l,r);return a.setUint32(i,u,!0),c}return 8},fd_prestat_get(e,t){const n=new DataView(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const{ret:r,prestat:i}=s.fds[e].fd_prestat_get();return null!=i&&i.write_bytes(n,t),r}return 8},fd_prestat_dir_name(e,t,n){if(null!=s.fds[e]){const{ret:n,prestat_dir_name:r}=s.fds[e].fd_prestat_dir_name();return null!=r&&new Uint8Array(s.inst.exports.memory.buffer).set(r,t),n}return 8},fd_pwrite(e,t,n,r,i){const a=new DataView(s.inst.exports.memory.buffer),o=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const l=j.read_bytes_array(a,t,n),{ret:c,nwritten:u}=s.fds[e].fd_pwrite(o,l,r);return a.setUint32(i,u,!0),c}return 8},fd_read(e,t,n,r){const i=new DataView(s.inst.exports.memory.buffer),a=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const o=v.read_bytes_array(i,t,n),{ret:l,nread:c}=s.fds[e].fd_read(a,o);return i.setUint32(r,c,!0),l}return 8},fd_readdir(e,t,n,r,i){const a=new DataView(s.inst.exports.memory.buffer),o=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){let l=0;for(;;){const{ret:c,dirent:u}=s.fds[e].fd_readdir_single(r);if(0!=c)return a.setUint32(i,l,!0),c;if(null==u)break;if(n-l<u.head_length()){l=n;break}const f=new ArrayBuffer(u.head_length());if(u.write_head_bytes(new DataView(f),0),o.set(new Uint8Array(f).slice(0,Math.min(f.byteLength,n-l)),t),t+=u.head_length(),l+=u.head_length(),n-l<u.name_length()){l=n;break}u.write_name_bytes(o,t,n-l),t+=u.name_length(),l+=u.name_length(),r=u.d_next}return a.setUint32(i,l,!0),0}return 8},fd_renumber(e,t){if(null!=s.fds[e]&&null!=s.fds[t]){const n=s.fds[t].fd_close();return 0!=n?n:(s.fds[t]=s.fds[e],s.fds[e]=void 0,0)}return 8},fd_seek(e,t,n,r){const i=new DataView(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const{ret:a,offset:o}=s.fds[e].fd_seek(t,n);return i.setBigInt64(r,o,!0),a}return 8},fd_sync:e=>null!=s.fds[e]?s.fds[e].fd_sync():8,fd_tell(e,t){const n=new DataView(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const{ret:r,offset:i}=s.fds[e].fd_tell();return n.setBigUint64(t,i,!0),r}return 8},fd_write(e,t,n,r){const i=new DataView(s.inst.exports.memory.buffer),a=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const o=j.read_bytes_array(i,t,n),{ret:l,nwritten:c}=s.fds[e].fd_write(a,o);return i.setUint32(r,c,!0),l}return 8},path_create_directory(e,t,n){const r=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const i=new TextDecoder("utf-8").decode(r.slice(t,t+n));return s.fds[e].path_create_directory(i)}},path_filestat_get(e,t,n,r,i){const a=new DataView(s.inst.exports.memory.buffer),o=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const l=new TextDecoder("utf-8").decode(o.slice(n,n+r)),{ret:c,filestat:u}=s.fds[e].path_filestat_get(t,l);return null!=u&&u.write_bytes(a,i),c}return 8},path_filestat_set_times(e,t,n,r,i,a,o){const l=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const c=new TextDecoder("utf-8").decode(l.slice(n,n+r));return s.fds[e].path_filestat_set_times(t,c,i,a,o)}return 8},path_link(e,t,n,r,i,a,o){const l=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]&&null!=s.fds[i]){const c=new TextDecoder("utf-8").decode(l.slice(n,n+r)),u=new TextDecoder("utf-8").decode(l.slice(a,a+o));return s.fds[i].path_link(e,t,c,u)}return 8},path_open(e,t,n,r,i,a,o,l,c){const u=new DataView(s.inst.exports.memory.buffer),f=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const d=new TextDecoder("utf-8").decode(f.slice(n,n+r));I.log(d);const{ret:h,fd_obj:b}=s.fds[e].path_open(t,d,i,a,o,l);if(0!=h)return h;s.fds.push(b);const _=s.fds.length-1;return u.setUint32(c,_,!0),0}return 8},path_readlink(e,t,n,r,i,a){const o=new DataView(s.inst.exports.memory.buffer),l=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const c=new TextDecoder("utf-8").decode(l.slice(t,t+n));I.log(c);const{ret:u,data:f}=s.fds[e].path_readlink(c);if(null!=f){if(f.length>i)return o.setUint32(a,0,!0),8;l.set(f,r),o.setUint32(a,f.length,!0)}return u}return 8},path_remove_directory(e,t,n){const r=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const i=new TextDecoder("utf-8").decode(r.slice(t,t+n));return s.fds[e].path_remove_directory(i)}return 8},path_rename(e,t,n,r,s,i){throw"FIXME what is the best abstraction for this?"},path_symlink(e,t,n,r,i){const a=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[n]){const o=new TextDecoder("utf-8").decode(a.slice(e,e+t)),l=new TextDecoder("utf-8").decode(a.slice(r,r+i));return s.fds[n].path_symlink(o,l)}return 8},path_unlink_file(e,t,n){const r=new Uint8Array(s.inst.exports.memory.buffer);if(null!=s.fds[e]){const i=new TextDecoder("utf-8").decode(r.slice(t,t+n));return s.fds[e].path_unlink_file(i)}return 8},poll_oneoff(e,t,n){throw"async io not supported"},proc_exit(e){throw"exit with exit code "+e},proc_raise(e){throw"raised signal "+e},sched_yield(){},random_get(e,t){const n=new Uint8Array(s.inst.exports.memory.buffer);for(let r=0;r<t;r++)n[e+r]=256*Math.random()|0},sock_recv(e,t,n){throw"sockets not supported"},sock_send(e,t,n){throw"sockets not supported"},sock_shutdown(e,t){throw"sockets not supported"},sock_accept(e,t){throw"sockets not supported"}}}}(["ruby.wasm","-e_=0"],[],[new U(new R([])),new U(new R([])),new U(new R([])),new V("/",e)],{debug:!1}),this.keyEventConsumer=new se([])}computeOptions(e){const t=[],n={"Lan_Master.nes":"/optcarrot/examples/Lan_Master.nes"};if(e.opt&&t.push("--opt"),!n[e.rom])throw new Error(`Unknown ROM: ${e.rom}`);return t.push(n[e.rom]),t}async init(e,t,n,r){this.remoteRender=t,this.remotePlayAudio=n,r({kind:"message",value:"Downloading..."}),r({kind:"progress",value:0});const s=await fetch("./optcarrot.wasm"),i=await s.arrayBuffer();r({kind:"progress",value:.2}),r({kind:"message",value:"Instantiating Optcarrot..."});const a={wasi_snapshot_preview1:this.wasi.wasiImport},o=new G;o.addToImports(a);const{instance:l}=await WebAssembly.instantiate(i,a);await o.setInstance(l),r({kind:"progress",value:.3}),this.wasi.initialize(l),o.initialize(),r({kind:"progress",value:.6}),console.time("init-optcarrot"),console.log("Options:",e),o.eval('\n      require "js"\n      JS::eval("console.time(\'require-optcarrot\')")\n      require_relative "/optcarrot/lib/optcarrot.rb"\n      JS::eval("console.timeEnd(\'require-optcarrot\')")\n    '),r({kind:"progress",value:.8}),this.tickVideo=e.headless?()=>{this.remoteRender(new Uint8Array)}:()=>{const e=this.videoBytes();this.remoteRender(g(e,[e.buffer]))},this.tickAudio=e.headless?()=>{this.remotePlayAudio(new Int16Array)}:()=>{const e=this.audioBytes();this.remotePlayAudio(g(e,[e.buffer]))},o.eval(`\n      ${e.headless?'\nmodule Optcarrot\n  # Audio output driver for Web Audio API\n  class WebAudioAudio < Audio\n    def tick(output)\n      JS::eval("globalThis.Optcarrot.tickAudio()")\n    end\n  end\n  # Video output driver for Web Canvas\n  class CanvasVideo < Video\n    def tick(screen)\n      JS::eval("globalThis.Optcarrot.tickVideo()")\n    end\n  end\n  BrowserInput = Input\nend\n':'\nmodule Optcarrot\n  # Audio output driver for Web Audio API\n  class WebAudioAudio < Audio\n    def tick(output)\n      bin = output.pack(@pack_format)\n      File.binwrite(File.join("/OPTCARROT_TMP/audio.data"), bin)\n      JS::eval("globalThis.Optcarrot.tickAudio()")\n    rescue => e\n      JS.global[:console].warn(e.inspect)\n    end\n  end\n  # Video output driver for Web Canvas\n  class CanvasVideo < Video\n    def init\n      super\n      @palette = @palette_rgb.map do |r, g, b|\n        0xff000000 | (b << 16) | (g << 8) | r\n      end\n    end\n\n    def dispose\n    end\n\n    def tick(screen)\n      bin = screen.pack("L*")\n      File.binwrite(File.join("/OPTCARROT_TMP", File.basename(@conf.video_output, ".EXT") + ".data"), bin)\n      JS::eval("globalThis.Optcarrot.tickVideo()")\n      super\n    rescue => e\n      JS.global[:console].warn(e.inspect)\n    end\n  end\n  # Input driver for browser input\n  class BrowserInput < Input\n    def init\n    end\n\n    def dispose\n    end\n\n    def tick(frame, pads)\n      event = JS::eval("return globalThis.Optcarrot.fetchKeyEvent()").inspect\n      return if event == ""\n      code, pressed = event.split(",")\n      code = code.to_i\n      if pressed == "true"\n        pads.keydown(0, code)\n      else\n        pads.keyup(0, code)\n      end\n    end\n  end\nend\n'}\n\n      # Monkey patch the Optcarrot to use web drivers\n      Optcarrot::Driver.define_singleton_method(:load) do |conf|\n        video = Optcarrot::CanvasVideo.new(conf)\n        audio = Optcarrot::WebAudioAudio.new(conf)\n        input = Optcarrot::BrowserInput.new(conf, video)\n        [video, audio, input]\n      end\n\n      args = [\n          ${this.computeOptions(e).map((e=>`"${e}"`)).join(", ")},\n          "--audio-sample-rate=11050",\n      ]\n      JS::eval("console.time('Optcarrot::NES.new')")\n      $nes = Optcarrot::NES.new(args)\n      JS::eval("console.timeEnd('Optcarrot::NES.new')")\n    `),r({kind:"progress",value:1}),r({kind:"done"}),o.eval("$nes.reset"),this.vm=o,this.run()}run(){setTimeout(this.run.bind(this),0),this.vm.eval("$nes.step")}videoBytes(){return this.rootFs.OPTCARROT_TMP.get_entry_for_path("video.data").data}audioBytes(){const e=this.rootFs.OPTCARROT_TMP.get_entry_for_path("audio.data");return new Int16Array(e.data.buffer)}pushKeyEvent(e,t){this.keyEventConsumer.push(e,t)}fetchKeyEvent(){const e=this.keyEventConsumer.consume();return e?e.join(","):""}}"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&(()=>{const e=new ie;globalThis.Optcarrot=e,f({init(t,n,r,s){try{e.init(t,n,r,s).catch((e=>{s({kind:"error",message:"Failed to initialize Optcarrot: "+e.message})}))}catch(e){s({kind:"error",message:"Failed to initialize Optcarrot: "+e.message})}},pushKeyEvent(t,n){e.pushKeyEvent(t,n)}})})()})();
//# sourceMappingURL=optcarrot.worker.3977d21b.js.map
