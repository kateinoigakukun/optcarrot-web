{"mappings":"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","sources":["node_modules/comlink/src/comlink.ts","node_modules/@bjorn3/browser_wasi_shim/dist/wasi_defs.js","node_modules/@bjorn3/browser_wasi_shim/dist/debug.js","node_modules/@bjorn3/browser_wasi_shim/dist/fd.js","node_modules/@bjorn3/browser_wasi_shim/dist/fs_fd.js","node_modules/@bjorn3/browser_wasi_shim/dist/fs_core.js","node_modules/@ruby/wasm-wasi/dist/index.esm.js","src/key-event-bus.ts","src/optcarrot.worker.ts","node_modules/@bjorn3/browser_wasi_shim/dist/wasi.js"],"sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","export const FD_STDIN=0;export const FD_STDOUT=1;export const FD_STDERR=2;export const CLOCKID_REALTIME=0;export const CLOCKID_MONOTONIC=1;export const CLOCKID_PROCESS_CPUTIME_ID=2;export const CLOCKID_THREAD_CPUTIME_ID=3;export const ERRNO_SUCCESS=0;export const ERRNO_2BIG=1;export const ERRNO_ACCES=2;export const ERRNO_ADDRINUSE=3;export const ERRNO_ADDRNOTAVAIL=4;export const ERRNO_AFNOSUPPORT=5;export const ERRNO_AGAIN=6;export const ERRNO_ALREADY=7;export const ERRNO_BADF=8;export const ERRNO_BADMSG=9;export const ERRNO_BUSY=10;export const ERRNO_CANCELED=11;export const ERRNO_CHILD=12;export const ERRNO_CONNABORTED=13;export const ERRNO_CONNREFUSED=14;export const ERRNO_CONNRESET=15;export const ERRNO_DEADLK=16;export const ERRNO_DESTADDRREQ=17;export const ERRNO_DOM=18;export const ERRNO_DQUOT=19;export const ERRNO_EXIST=20;export const ERRNO_FAULT=21;export const ERRNO_FBIG=22;export const ERRNO_HOSTUNREACH=23;export const ERRNO_IDRM=24;export const ERRNO_ILSEQ=25;export const ERRNO_INPROGRESS=26;export const ERRNO_INTR=27;export const ERRNO_INVAL=28;export const ERRNO_IO=29;export const ERRNO_ISCONN=30;export const ERRNO_ISDIR=31;export const ERRNO_LOOP=32;export const ERRNO_MFILE=33;export const ERRNO_MLINK=34;export const ERRNO_MSGSIZE=35;export const ERRNO_MULTIHOP=36;export const ERRNO_NAMETOOLONG=37;export const ERRNO_NETDOWN=38;export const ERRNO_NETRESET=39;export const ERRNO_NETUNREACH=40;export const ERRNO_NFILE=41;export const ERRNO_NOBUFS=42;export const ERRNO_NODEV=43;export const ERRNO_NOENT=44;export const ERRNO_NOEXEC=45;export const ERRNO_NOLCK=46;export const ERRNO_NOLINK=47;export const ERRNO_NOMEM=48;export const ERRNO_NOMSG=49;export const ERRNO_NOPROTOOPT=50;export const ERRNO_NOSPC=51;export const ERRNO_NOSYS=52;export const ERRNO_NOTCONN=53;export const ERRNO_NOTDIR=54;export const ERRNO_NOTEMPTY=55;export const ERRNO_NOTRECOVERABLE=56;export const ERRNO_NOTSOCK=57;export const ERRNO_NOTSUP=58;export const ERRNO_NOTTY=59;export const ERRNO_NXIO=60;export const ERRNO_OVERFLOW=61;export const ERRNO_OWNERDEAD=62;export const ERRNO_PERM=63;export const ERRNO_PIPE=64;export const ERRNO_PROTO=65;export const ERRNO_PROTONOSUPPORT=66;export const ERRNO_PROTOTYPE=67;export const ERRNO_RANGE=68;export const ERRNO_ROFS=69;export const ERRNO_SPIPE=70;export const ERRNO_SRCH=71;export const ERRNO_STALE=72;export const ERRNO_TIMEDOUT=73;export const ERRNO_TXTBSY=74;export const ERRNO_XDEV=75;export const ERRNO_NOTCAPABLE=76;export const RIGHTS_FD_DATASYNC=1<<0;export const RIGHTS_FD_READ=1<<1;export const RIGHTS_FD_SEEK=1<<2;export const RIGHTS_FD_FDSTAT_SET_FLAGS=1<<3;export const RIGHTS_FD_SYNC=1<<4;export const RIGHTS_FD_TELL=1<<5;export const RIGHTS_FD_WRITE=1<<6;export const RIGHTS_FD_ADVISE=1<<7;export const RIGHTS_FD_ALLOCATE=1<<8;export const RIGHTS_PATH_CREATE_DIRECTORY=1<<9;export const RIGHTS_PATH_CREATE_FILE=1<<10;export const RIGHTS_PATH_LINK_SOURCE=1<<11;export const RIGHTS_PATH_LINK_TARGET=1<<12;export const RIGHTS_PATH_OPEN=1<<13;export const RIGHTS_FD_READDIR=1<<14;export const RIGHTS_PATH_READLINK=1<<15;export const RIGHTS_PATH_RENAME_SOURCE=1<<16;export const RIGHTS_PATH_RENAME_TARGET=1<<17;export const RIGHTS_PATH_FILESTAT_GET=1<<18;export const RIGHTS_PATH_FILESTAT_SET_SIZE=1<<19;export const RIGHTS_PATH_FILESTAT_SET_TIMES=1<<20;export const RIGHTS_FD_FILESTAT_GET=1<<21;export const RIGHTS_FD_FILESTAT_SET_SIZE=1<<22;export const RIGHTS_FD_FILESTAT_SET_TIMES=1<<23;export const RIGHTS_PATH_SYMLINK=1<<24;export const RIGHTS_PATH_REMOVE_DIRECTORY=1<<25;export const RIGHTS_PATH_UNLINK_FILE=1<<26;export const RIGHTS_POLL_FD_READWRITE=1<<27;export const RIGHTS_SOCK_SHUTDOWN=1<<28;export class Iovec{static read_bytes(view,ptr){const iovec=new Iovec;iovec.buf=view.getUint32(ptr,true);iovec.buf_len=view.getUint32(ptr+4,true);return iovec}static read_bytes_array(view,ptr,len){const iovecs=[];for(let i=0;i<len;i++){iovecs.push(Iovec.read_bytes(view,ptr+8*i))}return iovecs}}export class Ciovec{static read_bytes(view,ptr){const iovec=new Ciovec;iovec.buf=view.getUint32(ptr,true);iovec.buf_len=view.getUint32(ptr+4,true);return iovec}static read_bytes_array(view,ptr,len){const iovecs=[];for(let i=0;i<len;i++){iovecs.push(Ciovec.read_bytes(view,ptr+8*i))}return iovecs}}export const WHENCE_SET=0;export const WHENCE_CUR=1;export const WHENCE_END=2;export const FILETYPE_UNKNOWN=0;export const FILETYPE_BLOCK_DEVICE=1;export const FILETYPE_CHARACTER_DEVICE=2;export const FILETYPE_DIRECTORY=3;export const FILETYPE_REGULAR_FILE=4;export const FILETYPE_SOCKET_DGRAM=5;export const FILETYPE_SOCKET_STREAM=6;export const FILETYPE_SYMBOLIC_LINK=7;export class Dirent{head_length(){return 24}name_length(){return this.dir_name.byteLength}write_head_bytes(view,ptr){view.setBigUint64(ptr,this.d_next,true);view.setBigUint64(ptr+8,this.d_ino,true);view.setUint32(ptr+16,this.dir_name.length,true);view.setUint8(ptr+20,this.d_type)}write_name_bytes(view8,ptr,buf_len){view8.set(this.dir_name.slice(0,Math.min(this.dir_name.byteLength,buf_len)),ptr)}constructor(next_cookie,name,type){this.d_ino=1n;const encoded_name=new TextEncoder().encode(name);this.d_next=next_cookie;this.d_namlen=encoded_name.byteLength;this.d_type=type;this.dir_name=encoded_name}}export const ADVICE_NORMAL=0;export const ADVICE_SEQUENTIAL=1;export const ADVICE_RANDOM=2;export const ADVICE_WILLNEED=3;export const ADVICE_DONTNEED=4;export const ADVICE_NOREUSE=5;export const FDFLAGS_APPEND=1<<0;export const FDFLAGS_DSYNC=1<<1;export const FDFLAGS_NONBLOCK=1<<2;export const FDFLAGS_RSYNC=1<<3;export const FDFLAGS_SYNC=1<<4;export class Fdstat{write_bytes(view,ptr){view.setUint8(ptr,this.fs_filetype);view.setUint16(ptr+2,this.fs_flags,true);view.setBigUint64(ptr+8,this.fs_rights_base,true);view.setBigUint64(ptr+16,this.fs_rights_inherited,true)}constructor(filetype,flags){this.fs_rights_base=0n;this.fs_rights_inherited=0n;this.fs_filetype=filetype;this.fs_flags=flags}}export const FSTFLAGS_ATIM=1<<0;export const FSTFLAGS_ATIM_NOW=1<<1;export const FSTFLAGS_MTIM=1<<2;export const FSTFLAGS_MTIM_NOW=1<<3;export const OFLAGS_CREAT=1<<0;export const OFLAGS_DIRECTORY=1<<1;export const OFLAGS_EXCL=1<<2;export const OFLAGS_TRUNC=1<<3;export class Filestat{write_bytes(view,ptr){view.setBigUint64(ptr,this.dev,true);view.setBigUint64(ptr+8,this.ino,true);view.setUint8(ptr+16,this.filetype);view.setBigUint64(ptr+24,this.nlink,true);view.setBigUint64(ptr+32,this.size,true);view.setBigUint64(ptr+38,this.atim,true);view.setBigUint64(ptr+46,this.mtim,true);view.setBigUint64(ptr+52,this.ctim,true)}constructor(filetype,size){this.dev=0n;this.ino=0n;this.nlink=0n;this.atim=0n;this.mtim=0n;this.ctim=0n;this.filetype=filetype;this.size=size}}export const EVENTTYPE_CLOCK=0;export const EVENTTYPE_FD_READ=1;export const EVENTTYPE_FD_WRITE=2;export const EVENTRWFLAGS_FD_READWRITE_HANGUP=1<<0;export const SUBCLOCKFLAGS_SUBSCRIPTION_CLOCK_ABSTIME=1<<0;export const SIGNAL_NONE=0;export const SIGNAL_HUP=1;export const SIGNAL_INT=2;export const SIGNAL_QUIT=3;export const SIGNAL_ILL=4;export const SIGNAL_TRAP=5;export const SIGNAL_ABRT=6;export const SIGNAL_BUS=7;export const SIGNAL_FPE=8;export const SIGNAL_KILL=9;export const SIGNAL_USR1=10;export const SIGNAL_SEGV=11;export const SIGNAL_USR2=12;export const SIGNAL_PIPE=13;export const SIGNAL_ALRM=14;export const SIGNAL_TERM=15;export const SIGNAL_CHLD=16;export const SIGNAL_CONT=17;export const SIGNAL_STOP=18;export const SIGNAL_TSTP=19;export const SIGNAL_TTIN=20;export const SIGNAL_TTOU=21;export const SIGNAL_URG=22;export const SIGNAL_XCPU=23;export const SIGNAL_XFSZ=24;export const SIGNAL_VTALRM=25;export const SIGNAL_PROF=26;export const SIGNAL_WINCH=27;export const SIGNAL_POLL=28;export const SIGNAL_PWR=29;export const SIGNAL_SYS=30;export const RIFLAGS_RECV_PEEK=1<<0;export const RIFLAGS_RECV_WAITALL=1<<1;export const ROFLAGS_RECV_DATA_TRUNCATED=1<<0;export const SDFLAGS_RD=1<<0;export const SDFLAGS_WR=1<<1;export const PREOPENTYPE_DIR=0;export class PrestatDir{write_bytes(view,ptr){view.setUint32(ptr,this.pr_name_len,true)}constructor(name_len){this.pr_name_len=name_len}}export class Prestat{static dir(name_len){const prestat=new Prestat;prestat.tag=PREOPENTYPE_DIR;prestat.inner=new PrestatDir(name_len);return prestat}write_bytes(view,ptr){view.setUint32(ptr,this.tag,true);this.inner.write_bytes(view,ptr+4)}}","let Debug=class Debug{enable(enabled){this.log=createLogger(enabled===undefined?true:enabled,this.prefix)}get enabled(){return this.isEnabled}constructor(isEnabled){this.isEnabled=isEnabled;this.prefix=\"wasi:\";this.enable(isEnabled)}};function createLogger(enabled,prefix){if(enabled){const a=console.log.bind(console,\"%c%s\",\"color: #265BA0\",prefix);return a}else{return()=>{}}}export const debug=new Debug(false);","export class Fd{fd_advise(offset,len,advice){return-1}fd_allocate(offset,len){return-1}fd_close(){return 0}fd_datasync(){return-1}fd_fdstat_get(){return{ret:-1,fdstat:null}}fd_fdstat_set_flags(flags){return-1}fd_fdstat_set_rights(fs_rights_base,fs_rights_inheriting){return-1}fd_filestat_get(){return{ret:-1,filestat:null}}fd_filestat_set_size(size){return-1}fd_filestat_set_times(atim,mtim,fst_flags){return-1}fd_pread(view8,iovs,offset){return{ret:-1,nread:0}}fd_prestat_get(){return{ret:-1,prestat:null}}fd_prestat_dir_name(){return{ret:-1,prestat_dir_name:null}}fd_pwrite(view8,iovs,offset){return{ret:-1,nwritten:0}}fd_read(view8,iovs){return{ret:-1,nread:0}}fd_readdir_single(cookie){return{ret:-1,dirent:null}}fd_seek(offset,whence){return{ret:-1,offset:0n}}fd_sync(){return 0}fd_tell(){return{ret:-1,offset:0n}}fd_write(view8,iovs){return{ret:-1,nwritten:0}}path_create_directory(path){return-1}path_filestat_get(flags,path){return{ret:-1,filestat:null}}path_filestat_set_times(flags,path,atim,mtim,fst_flags){return-1}path_link(old_fd,old_flags,old_path,new_path){return-1}path_open(dirflags,path,oflags,fs_rights_base,fs_rights_inheriting,fdflags){return{ret:-1,fd_obj:null}}path_readlink(path){return{ret:-1,data:null}}path_remove_directory(path){return-1}path_rename(old_path,new_fd,new_path){return-1}path_symlink(old_path,new_path){return-1}path_unlink_file(path){return-1}}","import*as wasi from\"./wasi_defs.js\";import{Directory}from\"./fs_core.js\";import{Fd}from\"./fd.js\";import{debug}from\"./debug.js\";export class OpenFile extends Fd{fd_fdstat_get(){return{ret:0,fdstat:new wasi.Fdstat(wasi.FILETYPE_REGULAR_FILE,0)}}fd_read(view8,iovs){let nread=0;for(const iovec of iovs){if(this.file_pos<this.file.data.byteLength){const slice=this.file.data.slice(Number(this.file_pos),Number(this.file_pos+BigInt(iovec.buf_len)));view8.set(slice,iovec.buf);this.file_pos+=BigInt(slice.length);nread+=slice.length}else{break}}return{ret:0,nread}}fd_pread(view8,iovs,offset){let nread=0;for(const iovec of iovs){if(offset<this.file.data.byteLength){const slice=this.file.data.slice(Number(offset),Number(offset+BigInt(iovec.buf_len)));view8.set(slice,iovec.buf);offset+=BigInt(slice.length);nread+=slice.length}else{break}}return{ret:0,nread}}fd_seek(offset,whence){let calculated_offset;switch(whence){case wasi.WHENCE_SET:calculated_offset=offset;break;case wasi.WHENCE_CUR:calculated_offset=this.file_pos+offset;break;case wasi.WHENCE_END:calculated_offset=BigInt(this.file.data.byteLength)+offset;break;default:return{ret:wasi.ERRNO_INVAL,offset:0n}}if(calculated_offset<0){return{ret:wasi.ERRNO_INVAL,offset:0n}}this.file_pos=calculated_offset;return{ret:0,offset:this.file_pos}}fd_write(view8,iovs){let nwritten=0;if(this.file.readonly)return{ret:wasi.ERRNO_BADF,nwritten};for(const iovec of iovs){const buffer=view8.slice(iovec.buf,iovec.buf+iovec.buf_len);if(this.file_pos+BigInt(buffer.byteLength)>this.file.size){const old=this.file.data;this.file.data=new Uint8Array(Number(this.file_pos+BigInt(buffer.byteLength)));this.file.data.set(old)}this.file.data.set(buffer.slice(0,Number(this.file.size-this.file_pos)),Number(this.file_pos));this.file_pos+=BigInt(buffer.byteLength);nwritten+=iovec.buf_len}return{ret:0,nwritten}}fd_filestat_get(){return{ret:0,filestat:this.file.stat()}}constructor(file){super();this.file_pos=0n;this.file=file}}export class OpenSyncOPFSFile extends Fd{fd_fdstat_get(){return{ret:0,fdstat:new wasi.Fdstat(wasi.FILETYPE_REGULAR_FILE,0)}}fd_filestat_get(){return{ret:0,filestat:new wasi.Filestat(wasi.FILETYPE_REGULAR_FILE,BigInt(this.file.handle.getSize()))}}fd_read(view8,iovs){let nread=0;for(const iovec of iovs){if(this.position<this.file.handle.getSize()){const buf=new Uint8Array(view8.buffer,iovec.buf,iovec.buf_len);const n=this.file.handle.read(buf,{at:Number(this.position)});this.position+=BigInt(n);nread+=n}else{break}}return{ret:0,nread}}fd_seek(offset,whence){let calculated_offset;switch(whence){case wasi.WHENCE_SET:calculated_offset=BigInt(offset);break;case wasi.WHENCE_CUR:calculated_offset=this.position+BigInt(offset);break;case wasi.WHENCE_END:calculated_offset=BigInt(this.file.handle.getSize())+BigInt(offset);break;default:return{ret:wasi.ERRNO_INVAL,offset:0n}}if(calculated_offset<0){return{ret:wasi.ERRNO_INVAL,offset:0n}}this.position=calculated_offset;return{ret:wasi.ERRNO_SUCCESS,offset:this.position}}fd_write(view8,iovs){let nwritten=0;if(this.file.readonly)return{ret:wasi.ERRNO_BADF,nwritten};for(const iovec of iovs){const buf=new Uint8Array(view8.buffer,iovec.buf,iovec.buf_len);const n=this.file.handle.write(buf,{at:Number(this.position)});this.position+=BigInt(n);nwritten+=n}return{ret:wasi.ERRNO_SUCCESS,nwritten}}fd_datasync(){this.file.handle.flush();return wasi.ERRNO_SUCCESS}fd_sync(){return this.fd_datasync()}fd_close(){return wasi.ERRNO_SUCCESS}constructor(file){super();this.position=0n;this.file=file}}export class OpenDirectory extends Fd{fd_fdstat_get(){return{ret:0,fdstat:new wasi.Fdstat(wasi.FILETYPE_DIRECTORY,0)}}fd_readdir_single(cookie){if(debug.enabled){debug.log(\"readdir_single\",cookie);debug.log(cookie,Object.keys(this.dir.contents))}debug.log(cookie,Object.keys(this.dir.contents).slice(Number(cookie)));if(cookie>=BigInt(Object.keys(this.dir.contents).length)){return{ret:0,dirent:null}}const name=Object.keys(this.dir.contents)[Number(cookie)];const entry=this.dir.contents[name];return{ret:0,dirent:new wasi.Dirent(cookie+1n,name,entry.stat().filetype)}}path_filestat_get(flags,path){const entry=this.dir.get_entry_for_path(path);if(entry==null){return{ret:wasi.ERRNO_NOENT,filestat:null}}return{ret:0,filestat:entry.stat()}}path_open(dirflags,path,oflags,fs_rights_base,fs_rights_inheriting,fd_flags){let entry=this.dir.get_entry_for_path(path);if(entry==null){if((oflags&wasi.OFLAGS_CREAT)==wasi.OFLAGS_CREAT){entry=this.dir.create_entry_for_path(path,(oflags&wasi.OFLAGS_DIRECTORY)==wasi.OFLAGS_DIRECTORY)}else{return{ret:wasi.ERRNO_NOENT,fd_obj:null}}}else if((oflags&wasi.OFLAGS_EXCL)==wasi.OFLAGS_EXCL){return{ret:wasi.ERRNO_EXIST,fd_obj:null}}if((oflags&wasi.OFLAGS_DIRECTORY)==wasi.OFLAGS_DIRECTORY&&entry.stat().filetype!==wasi.FILETYPE_DIRECTORY){return{ret:wasi.ERRNO_NOTDIR,fd_obj:null}}if(entry.readonly&&(fs_rights_base&BigInt(wasi.RIGHTS_FD_WRITE))==BigInt(wasi.RIGHTS_FD_WRITE)){return{ret:wasi.ERRNO_PERM,fd_obj:null}}if(!(entry instanceof Directory)&&(oflags&wasi.OFLAGS_TRUNC)==wasi.OFLAGS_TRUNC){const ret=entry.truncate();if(ret!=wasi.ERRNO_SUCCESS)return{ret,fd_obj:null}}return{ret:wasi.ERRNO_SUCCESS,fd_obj:entry.open(fd_flags)}}path_create_directory(path){return this.path_open(0,path,wasi.OFLAGS_CREAT|wasi.OFLAGS_DIRECTORY,0n,0n,0).ret}constructor(dir){super();this.dir=dir}}export class PreopenDirectory extends OpenDirectory{fd_prestat_get(){return{ret:0,prestat:wasi.Prestat.dir(this.prestat_name.length)}}fd_prestat_dir_name(){return{ret:0,prestat_dir_name:this.prestat_name}}constructor(name,contents){super(new Directory(contents));this.prestat_name=new TextEncoder().encode(name)}}","import{debug}from\"./debug.js\";import{OpenDirectory,OpenFile,OpenSyncOPFSFile}from\"./fs_fd.js\";import*as wasi from\"./wasi_defs.js\";export class File{open(fd_flags){const file=new OpenFile(this);if(fd_flags&wasi.FDFLAGS_APPEND)file.fd_seek(0n,wasi.WHENCE_END);return file}get size(){return BigInt(this.data.byteLength)}stat(){return new wasi.Filestat(wasi.FILETYPE_REGULAR_FILE,this.size)}truncate(){if(this.readonly)return wasi.ERRNO_PERM;this.data=new Uint8Array([]);return wasi.ERRNO_SUCCESS}constructor(data,options){this.data=new Uint8Array(data);this.readonly=!!options?.readonly}}export class SyncOPFSFile{open(fd_flags){const file=new OpenSyncOPFSFile(this);if(fd_flags&wasi.FDFLAGS_APPEND)file.fd_seek(0n,wasi.WHENCE_END);return file}get size(){return BigInt(this.handle.getSize())}stat(){return new wasi.Filestat(wasi.FILETYPE_REGULAR_FILE,this.size)}truncate(){if(this.readonly)return wasi.ERRNO_PERM;this.handle.truncate(0);return wasi.ERRNO_SUCCESS}constructor(handle,options){this.handle=handle;this.readonly=!!options?.readonly}}export class Directory{open(fd_flags){return new OpenDirectory(this)}stat(){return new wasi.Filestat(wasi.FILETYPE_DIRECTORY,0n)}get_entry_for_path(path){let entry=this;for(const component of path.split(\"/\")){if(component==\"\")break;if(component==\".\")continue;if(!(entry instanceof Directory)){return null}if(entry.contents[component]!=undefined){entry=entry.contents[component]}else{debug.log(component);return null}}return entry}create_entry_for_path(path,is_dir){let entry=this;const components=path.split(\"/\").filter(component=>component!=\"/\");for(let i=0;i<components.length;i++){const component=components[i];if(!(entry instanceof Directory)){break}if(entry.contents[component]!=undefined){entry=entry.contents[component]}else{debug.log(\"create\",component);if(i==components.length-1&&!is_dir){entry.contents[component]=new File(new ArrayBuffer(0))}else{entry.contents[component]=new Directory({})}entry=entry.contents[component]}}return entry}constructor(contents){this.readonly=false;this.contents=contents}}","let DATA_VIEW = new DataView(new ArrayBuffer());\n\nfunction data_view(mem) {\n  if (DATA_VIEW.buffer !== mem.buffer) DATA_VIEW = new DataView(mem.buffer);\n  return DATA_VIEW;\n}\n\nfunction to_uint32(val) {\n  return val >>> 0;\n}\nconst UTF8_DECODER = new TextDecoder('utf-8');\n\nconst UTF8_ENCODER = new TextEncoder('utf-8');\n\nfunction utf8_encode(s, realloc, memory) {\n  if (typeof s !== 'string') throw new TypeError('expected a string');\n  \n  if (s.length === 0) {\n    UTF8_ENCODED_LEN = 0;\n    return 1;\n  }\n  \n  let alloc_len = 0;\n  let ptr = 0;\n  let writtenTotal = 0;\n  while (s.length > 0) {\n    ptr = realloc(ptr, alloc_len, 1, alloc_len + s.length);\n    alloc_len += s.length;\n    const { read, written } = UTF8_ENCODER.encodeInto(\n    s,\n    new Uint8Array(memory.buffer, ptr + writtenTotal, alloc_len - writtenTotal),\n    );\n    writtenTotal += written;\n    s = s.slice(read);\n  }\n  if (alloc_len > writtenTotal)\n  ptr = realloc(ptr, alloc_len, 1, writtenTotal);\n  UTF8_ENCODED_LEN = writtenTotal;\n  return ptr;\n}\nlet UTF8_ENCODED_LEN = 0;\n\nclass Slab {\n  constructor() {\n    this.list = [];\n    this.head = 0;\n  }\n  \n  insert(val) {\n    if (this.head >= this.list.length) {\n      this.list.push({\n        next: this.list.length + 1,\n        val: undefined,\n      });\n    }\n    const ret = this.head;\n    const slot = this.list[ret];\n    this.head = slot.next;\n    slot.next = -1;\n    slot.val = val;\n    return ret;\n  }\n  \n  get(idx) {\n    if (idx >= this.list.length)\n    throw new RangeError('handle index not valid');\n    const slot = this.list[idx];\n    if (slot.next === -1)\n    return slot.val;\n    throw new RangeError('handle index not valid');\n  }\n  \n  remove(idx) {\n    const ret = this.get(idx); // validate the slot\n    const slot = this.list[idx];\n    slot.val = undefined;\n    slot.next = this.head;\n    this.head = idx;\n    return ret;\n  }\n}\n\nfunction throw_invalid_bool() {\n  throw new RangeError(\"invalid variant discriminant for bool\");\n}\n\nclass RbAbiGuest {\n  constructor() {\n    this._resource0_slab = new Slab();\n    this._resource1_slab = new Slab();\n  }\n  addToImports(imports) {\n    if (!(\"canonical_abi\" in imports)) imports[\"canonical_abi\"] = {};\n    \n    imports.canonical_abi['resource_drop_rb-iseq'] = i => {\n      this._resource0_slab.remove(i).drop();\n    };\n    imports.canonical_abi['resource_clone_rb-iseq'] = i => {\n      const obj = this._resource0_slab.get(i);\n      return this._resource0_slab.insert(obj.clone())\n    };\n    imports.canonical_abi['resource_get_rb-iseq'] = i => {\n      return this._resource0_slab.get(i)._wasm_val;\n    };\n    imports.canonical_abi['resource_new_rb-iseq'] = i => {\n      this._registry0;\n      return this._resource0_slab.insert(new RbIseq(i, this));\n    };\n    \n    imports.canonical_abi['resource_drop_rb-abi-value'] = i => {\n      this._resource1_slab.remove(i).drop();\n    };\n    imports.canonical_abi['resource_clone_rb-abi-value'] = i => {\n      const obj = this._resource1_slab.get(i);\n      return this._resource1_slab.insert(obj.clone())\n    };\n    imports.canonical_abi['resource_get_rb-abi-value'] = i => {\n      return this._resource1_slab.get(i)._wasm_val;\n    };\n    imports.canonical_abi['resource_new_rb-abi-value'] = i => {\n      this._registry1;\n      return this._resource1_slab.insert(new RbAbiValue(i, this));\n    };\n  }\n  \n  async instantiate(module, imports) {\n    imports = imports || {};\n    this.addToImports(imports);\n    \n    if (module instanceof WebAssembly.Instance) {\n      this.instance = module;\n    } else if (module instanceof WebAssembly.Module) {\n      this.instance = await WebAssembly.instantiate(module, imports);\n    } else if (module instanceof ArrayBuffer || module instanceof Uint8Array) {\n      const { instance } = await WebAssembly.instantiate(module, imports);\n      this.instance = instance;\n    } else {\n      const { instance } = await WebAssembly.instantiateStreaming(module, imports);\n      this.instance = instance;\n    }\n    this._exports = this.instance.exports;\n    this._registry0 = new FinalizationRegistry(this._exports['canonical_abi_drop_rb-iseq']);\n    this._registry1 = new FinalizationRegistry(this._exports['canonical_abi_drop_rb-abi-value']);\n  }\n  rubyShowVersion() {\n    this._exports['ruby-show-version: func() -> ()']();\n  }\n  rubyInit() {\n    this._exports['ruby-init: func() -> ()']();\n  }\n  rubySysinit(arg0) {\n    const memory = this._exports.memory;\n    const realloc = this._exports[\"cabi_realloc\"];\n    const vec1 = arg0;\n    const len1 = vec1.length;\n    const result1 = realloc(0, 0, 4, len1 * 8);\n    for (let i = 0; i < vec1.length; i++) {\n      const e = vec1[i];\n      const base = result1 + i * 8;\n      const ptr0 = utf8_encode(e, realloc, memory);\n      const len0 = UTF8_ENCODED_LEN;\n      data_view(memory).setInt32(base + 4, len0, true);\n      data_view(memory).setInt32(base + 0, ptr0, true);\n    }\n    this._exports['ruby-sysinit: func(args: list<string>) -> ()'](result1, len1);\n  }\n  rubyOptions(arg0) {\n    const memory = this._exports.memory;\n    const realloc = this._exports[\"cabi_realloc\"];\n    const vec1 = arg0;\n    const len1 = vec1.length;\n    const result1 = realloc(0, 0, 4, len1 * 8);\n    for (let i = 0; i < vec1.length; i++) {\n      const e = vec1[i];\n      const base = result1 + i * 8;\n      const ptr0 = utf8_encode(e, realloc, memory);\n      const len0 = UTF8_ENCODED_LEN;\n      data_view(memory).setInt32(base + 4, len0, true);\n      data_view(memory).setInt32(base + 0, ptr0, true);\n    }\n    const ret = this._exports['ruby-options: func(args: list<string>) -> handle<rb-iseq>'](result1, len1);\n    return this._resource0_slab.remove(ret);\n  }\n  rubyScript(arg0) {\n    const memory = this._exports.memory;\n    const realloc = this._exports[\"cabi_realloc\"];\n    const ptr0 = utf8_encode(arg0, realloc, memory);\n    const len0 = UTF8_ENCODED_LEN;\n    this._exports['ruby-script: func(name: string) -> ()'](ptr0, len0);\n  }\n  rubyInitLoadpath() {\n    this._exports['ruby-init-loadpath: func() -> ()']();\n  }\n  rbEvalStringProtect(arg0) {\n    const memory = this._exports.memory;\n    const realloc = this._exports[\"cabi_realloc\"];\n    const ptr0 = utf8_encode(arg0, realloc, memory);\n    const len0 = UTF8_ENCODED_LEN;\n    const ret = this._exports['rb-eval-string-protect: func(str: string) -> tuple<handle<rb-abi-value>, s32>'](ptr0, len0);\n    return [this._resource1_slab.remove(data_view(memory).getInt32(ret + 0, true)), data_view(memory).getInt32(ret + 4, true)];\n  }\n  rbFuncallvProtect(arg0, arg1, arg2) {\n    const memory = this._exports.memory;\n    const realloc = this._exports[\"cabi_realloc\"];\n    const obj0 = arg0;\n    if (!(obj0 instanceof RbAbiValue)) throw new TypeError('expected instance of RbAbiValue');\n    const vec2 = arg2;\n    const len2 = vec2.length;\n    const result2 = realloc(0, 0, 4, len2 * 4);\n    for (let i = 0; i < vec2.length; i++) {\n      const e = vec2[i];\n      const base = result2 + i * 4;\n      const obj1 = e;\n      if (!(obj1 instanceof RbAbiValue)) throw new TypeError('expected instance of RbAbiValue');\n      data_view(memory).setInt32(base + 0, this._resource1_slab.insert(obj1.clone()), true);\n    }\n    const ret = this._exports['rb-funcallv-protect: func(recv: handle<rb-abi-value>, mid: u32, args: list<handle<rb-abi-value>>) -> tuple<handle<rb-abi-value>, s32>'](this._resource1_slab.insert(obj0.clone()), to_uint32(arg1), result2, len2);\n    return [this._resource1_slab.remove(data_view(memory).getInt32(ret + 0, true)), data_view(memory).getInt32(ret + 4, true)];\n  }\n  rbIntern(arg0) {\n    const memory = this._exports.memory;\n    const realloc = this._exports[\"cabi_realloc\"];\n    const ptr0 = utf8_encode(arg0, realloc, memory);\n    const len0 = UTF8_ENCODED_LEN;\n    const ret = this._exports['rb-intern: func(name: string) -> u32'](ptr0, len0);\n    return ret >>> 0;\n  }\n  rbErrinfo() {\n    const ret = this._exports['rb-errinfo: func() -> handle<rb-abi-value>']();\n    return this._resource1_slab.remove(ret);\n  }\n  rbClearErrinfo() {\n    this._exports['rb-clear-errinfo: func() -> ()']();\n  }\n  rstringPtr(arg0) {\n    const memory = this._exports.memory;\n    const obj0 = arg0;\n    if (!(obj0 instanceof RbAbiValue)) throw new TypeError('expected instance of RbAbiValue');\n    const ret = this._exports['rstring-ptr: func(value: handle<rb-abi-value>) -> string'](this._resource1_slab.insert(obj0.clone()));\n    const ptr1 = data_view(memory).getInt32(ret + 0, true);\n    const len1 = data_view(memory).getInt32(ret + 4, true);\n    const result1 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr1, len1));\n    this._exports[\"cabi_post_rstring-ptr\"](ret);\n    return result1;\n  }\n  rbVmBugreport() {\n    this._exports['rb-vm-bugreport: func() -> ()']();\n  }\n  rbGcEnable() {\n    const ret = this._exports['rb-gc-enable: func() -> bool']();\n    const bool0 = ret;\n    return bool0 == 0 ? false : (bool0 == 1 ? true : throw_invalid_bool());\n  }\n  rbGcDisable() {\n    const ret = this._exports['rb-gc-disable: func() -> bool']();\n    const bool0 = ret;\n    return bool0 == 0 ? false : (bool0 == 1 ? true : throw_invalid_bool());\n  }\n  rbSetShouldProhibitRewind(arg0) {\n    const ret = this._exports['rb-set-should-prohibit-rewind: func(new-value: bool) -> bool'](arg0 ? 1 : 0);\n    const bool0 = ret;\n    return bool0 == 0 ? false : (bool0 == 1 ? true : throw_invalid_bool());\n  }\n}\n\nclass RbIseq {\n  constructor(wasm_val, obj) {\n    this._wasm_val = wasm_val;\n    this._obj = obj;\n    this._refcnt = 1;\n    obj._registry0.register(this, wasm_val, this);\n  }\n  \n  clone() {\n    this._refcnt += 1;\n    return this;\n  }\n  \n  drop() {\n    this._refcnt -= 1;\n    if (this._refcnt !== 0)\n    return;\n    this._obj._registry0.unregister(this);\n    const dtor = this._obj._exports['canonical_abi_drop_rb-iseq'];\n    const wasm_val = this._wasm_val;\n    delete this._obj;\n    delete this._refcnt;\n    delete this._wasm_val;\n    dtor(wasm_val);\n  }\n}\n\nclass RbAbiValue {\n  constructor(wasm_val, obj) {\n    this._wasm_val = wasm_val;\n    this._obj = obj;\n    this._refcnt = 1;\n    obj._registry1.register(this, wasm_val, this);\n  }\n  \n  clone() {\n    this._refcnt += 1;\n    return this;\n  }\n  \n  drop() {\n    this._refcnt -= 1;\n    if (this._refcnt !== 0)\n    return;\n    this._obj._registry1.unregister(this);\n    const dtor = this._obj._exports['canonical_abi_drop_rb-abi-value'];\n    const wasm_val = this._wasm_val;\n    delete this._obj;\n    delete this._refcnt;\n    delete this._wasm_val;\n    dtor(wasm_val);\n  }\n}\n\nfunction addRbJsAbiHostToImports(imports, obj, get_export) {\n  if (!(\"rb-js-abi-host\" in imports)) imports[\"rb-js-abi-host\"] = {};\n  imports[\"rb-js-abi-host\"][\"eval-js: func(code: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }\"] = function(arg0, arg1, arg2) {\n    const memory = get_export(\"memory\");\n    const ptr0 = arg0;\n    const len0 = arg1;\n    const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n    const ret0 = obj.evalJs(result0);\n    const variant1 = ret0;\n    switch (variant1.tag) {\n      case \"success\": {\n        const e = variant1.val;\n        data_view(memory).setInt8(arg2 + 0, 0, true);\n        data_view(memory).setInt32(arg2 + 4, resources0.insert(e), true);\n        break;\n      }\n      case \"failure\": {\n        const e = variant1.val;\n        data_view(memory).setInt8(arg2 + 0, 1, true);\n        data_view(memory).setInt32(arg2 + 4, resources0.insert(e), true);\n        break;\n      }\n      default:\n      throw new RangeError(\"invalid variant specified for JsAbiResult\");\n    }\n  };\n  imports[\"rb-js-abi-host\"][\"is-js: func(value: handle<js-abi-value>) -> bool\"] = function(arg0) {\n    const ret0 = obj.isJs(resources0.get(arg0));\n    return ret0 ? 1 : 0;\n  };\n  imports[\"rb-js-abi-host\"][\"instance-of: func(value: handle<js-abi-value>, klass: handle<js-abi-value>) -> bool\"] = function(arg0, arg1) {\n    const ret0 = obj.instanceOf(resources0.get(arg0), resources0.get(arg1));\n    return ret0 ? 1 : 0;\n  };\n  imports[\"rb-js-abi-host\"][\"global-this: func() -> handle<js-abi-value>\"] = function() {\n    const ret0 = obj.globalThis();\n    return resources0.insert(ret0);\n  };\n  imports[\"rb-js-abi-host\"][\"int-to-js-number: func(value: s32) -> handle<js-abi-value>\"] = function(arg0) {\n    const ret0 = obj.intToJsNumber(arg0);\n    return resources0.insert(ret0);\n  };\n  imports[\"rb-js-abi-host\"][\"float-to-js-number: func(value: float64) -> handle<js-abi-value>\"] = function(arg0) {\n    const ret0 = obj.floatToJsNumber(arg0);\n    return resources0.insert(ret0);\n  };\n  imports[\"rb-js-abi-host\"][\"string-to-js-string: func(value: string) -> handle<js-abi-value>\"] = function(arg0, arg1) {\n    const memory = get_export(\"memory\");\n    const ptr0 = arg0;\n    const len0 = arg1;\n    const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n    const ret0 = obj.stringToJsString(result0);\n    return resources0.insert(ret0);\n  };\n  imports[\"rb-js-abi-host\"][\"bool-to-js-bool: func(value: bool) -> handle<js-abi-value>\"] = function(arg0) {\n    const bool0 = arg0;\n    const ret0 = obj.boolToJsBool(bool0 == 0 ? false : (bool0 == 1 ? true : throw_invalid_bool()));\n    return resources0.insert(ret0);\n  };\n  imports[\"rb-js-abi-host\"][\"proc-to-js-function: func(value: u32) -> handle<js-abi-value>\"] = function(arg0) {\n    const ret0 = obj.procToJsFunction(arg0 >>> 0);\n    return resources0.insert(ret0);\n  };\n  imports[\"rb-js-abi-host\"][\"rb-object-to-js-rb-value: func(raw-rb-abi-value: u32) -> handle<js-abi-value>\"] = function(arg0) {\n    const ret0 = obj.rbObjectToJsRbValue(arg0 >>> 0);\n    return resources0.insert(ret0);\n  };\n  imports[\"rb-js-abi-host\"][\"js-value-to-string: func(value: handle<js-abi-value>) -> string\"] = function(arg0, arg1) {\n    const memory = get_export(\"memory\");\n    const realloc = get_export(\"cabi_realloc\");\n    const ret0 = obj.jsValueToString(resources0.get(arg0));\n    const ptr0 = utf8_encode(ret0, realloc, memory);\n    const len0 = UTF8_ENCODED_LEN;\n    data_view(memory).setInt32(arg1 + 4, len0, true);\n    data_view(memory).setInt32(arg1 + 0, ptr0, true);\n  };\n  imports[\"rb-js-abi-host\"][\"js-value-to-integer: func(value: handle<js-abi-value>) -> variant { f64(float64), bignum(string) }\"] = function(arg0, arg1) {\n    const memory = get_export(\"memory\");\n    const realloc = get_export(\"cabi_realloc\");\n    const ret0 = obj.jsValueToInteger(resources0.get(arg0));\n    const variant1 = ret0;\n    switch (variant1.tag) {\n      case \"f64\": {\n        const e = variant1.val;\n        data_view(memory).setInt8(arg1 + 0, 0, true);\n        data_view(memory).setFloat64(arg1 + 8, +e, true);\n        break;\n      }\n      case \"bignum\": {\n        const e = variant1.val;\n        data_view(memory).setInt8(arg1 + 0, 1, true);\n        const ptr0 = utf8_encode(e, realloc, memory);\n        const len0 = UTF8_ENCODED_LEN;\n        data_view(memory).setInt32(arg1 + 12, len0, true);\n        data_view(memory).setInt32(arg1 + 8, ptr0, true);\n        break;\n      }\n      default:\n      throw new RangeError(\"invalid variant specified for RawInteger\");\n    }\n  };\n  imports[\"rb-js-abi-host\"][\"export-js-value-to-host: func(value: handle<js-abi-value>) -> ()\"] = function(arg0) {\n    obj.exportJsValueToHost(resources0.get(arg0));\n  };\n  imports[\"rb-js-abi-host\"][\"import-js-value-from-host: func() -> handle<js-abi-value>\"] = function() {\n    const ret0 = obj.importJsValueFromHost();\n    return resources0.insert(ret0);\n  };\n  imports[\"rb-js-abi-host\"][\"js-value-typeof: func(value: handle<js-abi-value>) -> string\"] = function(arg0, arg1) {\n    const memory = get_export(\"memory\");\n    const realloc = get_export(\"cabi_realloc\");\n    const ret0 = obj.jsValueTypeof(resources0.get(arg0));\n    const ptr0 = utf8_encode(ret0, realloc, memory);\n    const len0 = UTF8_ENCODED_LEN;\n    data_view(memory).setInt32(arg1 + 4, len0, true);\n    data_view(memory).setInt32(arg1 + 0, ptr0, true);\n  };\n  imports[\"rb-js-abi-host\"][\"js-value-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool\"] = function(arg0, arg1) {\n    const ret0 = obj.jsValueEqual(resources0.get(arg0), resources0.get(arg1));\n    return ret0 ? 1 : 0;\n  };\n  imports[\"rb-js-abi-host\"][\"js-value-strictly-equal: func(lhs: handle<js-abi-value>, rhs: handle<js-abi-value>) -> bool\"] = function(arg0, arg1) {\n    const ret0 = obj.jsValueStrictlyEqual(resources0.get(arg0), resources0.get(arg1));\n    return ret0 ? 1 : 0;\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-apply: func(target: handle<js-abi-value>, this-argument: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }\"] = function(arg0, arg1, arg2, arg3, arg4) {\n    const memory = get_export(\"memory\");\n    const len0 = arg3;\n    const base0 = arg2;\n    const result0 = [];\n    for (let i = 0; i < len0; i++) {\n      const base = base0 + i * 4;\n      result0.push(resources0.get(data_view(memory).getInt32(base + 0, true)));\n    }\n    const ret0 = obj.reflectApply(resources0.get(arg0), resources0.get(arg1), result0);\n    const variant1 = ret0;\n    switch (variant1.tag) {\n      case \"success\": {\n        const e = variant1.val;\n        data_view(memory).setInt8(arg4 + 0, 0, true);\n        data_view(memory).setInt32(arg4 + 4, resources0.insert(e), true);\n        break;\n      }\n      case \"failure\": {\n        const e = variant1.val;\n        data_view(memory).setInt8(arg4 + 0, 1, true);\n        data_view(memory).setInt32(arg4 + 4, resources0.insert(e), true);\n        break;\n      }\n      default:\n      throw new RangeError(\"invalid variant specified for JsAbiResult\");\n    }\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-construct: func(target: handle<js-abi-value>, arguments: list<handle<js-abi-value>>) -> handle<js-abi-value>\"] = function(arg0, arg1, arg2) {\n    const memory = get_export(\"memory\");\n    const len0 = arg2;\n    const base0 = arg1;\n    const result0 = [];\n    for (let i = 0; i < len0; i++) {\n      const base = base0 + i * 4;\n      result0.push(resources0.get(data_view(memory).getInt32(base + 0, true)));\n    }\n    const ret0 = obj.reflectConstruct(resources0.get(arg0), result0);\n    return resources0.insert(ret0);\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-delete-property: func(target: handle<js-abi-value>, property-key: string) -> bool\"] = function(arg0, arg1, arg2) {\n    const memory = get_export(\"memory\");\n    const ptr0 = arg1;\n    const len0 = arg2;\n    const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n    const ret0 = obj.reflectDeleteProperty(resources0.get(arg0), result0);\n    return ret0 ? 1 : 0;\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-get: func(target: handle<js-abi-value>, property-key: string) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }\"] = function(arg0, arg1, arg2, arg3) {\n    const memory = get_export(\"memory\");\n    const ptr0 = arg1;\n    const len0 = arg2;\n    const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n    const ret0 = obj.reflectGet(resources0.get(arg0), result0);\n    const variant1 = ret0;\n    switch (variant1.tag) {\n      case \"success\": {\n        const e = variant1.val;\n        data_view(memory).setInt8(arg3 + 0, 0, true);\n        data_view(memory).setInt32(arg3 + 4, resources0.insert(e), true);\n        break;\n      }\n      case \"failure\": {\n        const e = variant1.val;\n        data_view(memory).setInt8(arg3 + 0, 1, true);\n        data_view(memory).setInt32(arg3 + 4, resources0.insert(e), true);\n        break;\n      }\n      default:\n      throw new RangeError(\"invalid variant specified for JsAbiResult\");\n    }\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-get-own-property-descriptor: func(target: handle<js-abi-value>, property-key: string) -> handle<js-abi-value>\"] = function(arg0, arg1, arg2) {\n    const memory = get_export(\"memory\");\n    const ptr0 = arg1;\n    const len0 = arg2;\n    const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n    const ret0 = obj.reflectGetOwnPropertyDescriptor(resources0.get(arg0), result0);\n    return resources0.insert(ret0);\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-get-prototype-of: func(target: handle<js-abi-value>) -> handle<js-abi-value>\"] = function(arg0) {\n    const ret0 = obj.reflectGetPrototypeOf(resources0.get(arg0));\n    return resources0.insert(ret0);\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-has: func(target: handle<js-abi-value>, property-key: string) -> bool\"] = function(arg0, arg1, arg2) {\n    const memory = get_export(\"memory\");\n    const ptr0 = arg1;\n    const len0 = arg2;\n    const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n    const ret0 = obj.reflectHas(resources0.get(arg0), result0);\n    return ret0 ? 1 : 0;\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-is-extensible: func(target: handle<js-abi-value>) -> bool\"] = function(arg0) {\n    const ret0 = obj.reflectIsExtensible(resources0.get(arg0));\n    return ret0 ? 1 : 0;\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-own-keys: func(target: handle<js-abi-value>) -> list<handle<js-abi-value>>\"] = function(arg0, arg1) {\n    const memory = get_export(\"memory\");\n    const realloc = get_export(\"cabi_realloc\");\n    const ret0 = obj.reflectOwnKeys(resources0.get(arg0));\n    const vec0 = ret0;\n    const len0 = vec0.length;\n    const result0 = realloc(0, 0, 4, len0 * 4);\n    for (let i = 0; i < vec0.length; i++) {\n      const e = vec0[i];\n      const base = result0 + i * 4;\n      data_view(memory).setInt32(base + 0, resources0.insert(e), true);\n    }\n    data_view(memory).setInt32(arg1 + 4, len0, true);\n    data_view(memory).setInt32(arg1 + 0, result0, true);\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-prevent-extensions: func(target: handle<js-abi-value>) -> bool\"] = function(arg0) {\n    const ret0 = obj.reflectPreventExtensions(resources0.get(arg0));\n    return ret0 ? 1 : 0;\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-set: func(target: handle<js-abi-value>, property-key: string, value: handle<js-abi-value>) -> variant { success(handle<js-abi-value>), failure(handle<js-abi-value>) }\"] = function(arg0, arg1, arg2, arg3, arg4) {\n    const memory = get_export(\"memory\");\n    const ptr0 = arg1;\n    const len0 = arg2;\n    const result0 = UTF8_DECODER.decode(new Uint8Array(memory.buffer, ptr0, len0));\n    const ret0 = obj.reflectSet(resources0.get(arg0), result0, resources0.get(arg3));\n    const variant1 = ret0;\n    switch (variant1.tag) {\n      case \"success\": {\n        const e = variant1.val;\n        data_view(memory).setInt8(arg4 + 0, 0, true);\n        data_view(memory).setInt32(arg4 + 4, resources0.insert(e), true);\n        break;\n      }\n      case \"failure\": {\n        const e = variant1.val;\n        data_view(memory).setInt8(arg4 + 0, 1, true);\n        data_view(memory).setInt32(arg4 + 4, resources0.insert(e), true);\n        break;\n      }\n      default:\n      throw new RangeError(\"invalid variant specified for JsAbiResult\");\n    }\n  };\n  imports[\"rb-js-abi-host\"][\"reflect-set-prototype-of: func(target: handle<js-abi-value>, prototype: handle<js-abi-value>) -> bool\"] = function(arg0, arg1) {\n    const ret0 = obj.reflectSetPrototypeOf(resources0.get(arg0), resources0.get(arg1));\n    return ret0 ? 1 : 0;\n  };\n  if (!(\"canonical_abi\" in imports)) imports[\"canonical_abi\"] = {};\n  \n  const resources0 = new Slab();\n  imports.canonical_abi[\"resource_drop_js-abi-value\"] = (i) => {\n    const val = resources0.remove(i);\n    if (obj.dropJsAbiValue)\n    obj.dropJsAbiValue(val);\n  };\n}\n\n/**\n * A Ruby VM instance\n *\n * @example\n *\n * const wasi = new WASI();\n * const vm = new RubyVM();\n * const imports = {\n *   wasi_snapshot_preview1: wasi.wasiImport,\n * };\n *\n * vm.addToImports(imports);\n *\n * const instance = await WebAssembly.instantiate(rubyModule, imports);\n * await vm.setInstance(instance);\n * wasi.initialize(instance);\n * vm.initialize();\n *\n */\nclass RubyVM {\n    constructor() {\n        this.instance = null;\n        this.interfaceState = {\n            hasJSFrameAfterRbFrame: false,\n        };\n        // Wrap exported functions from Ruby VM to prohibit nested VM operation\n        // if the call stack has sandwitched JS frames like JS -> Ruby -> JS -> Ruby.\n        const proxyExports = (exports) => {\n            const excludedMethods = [\n                \"addToImports\",\n                \"instantiate\",\n                \"rbSetShouldProhibitRewind\",\n                \"rbGcDisable\",\n                \"rbGcEnable\",\n            ];\n            const excluded = [\"constructor\"].concat(excludedMethods);\n            // wrap all methods in RbAbi.RbAbiGuest class\n            for (const key of Object.getOwnPropertyNames(RbAbiGuest.prototype)) {\n                if (excluded.includes(key)) {\n                    continue;\n                }\n                const value = exports[key];\n                if (typeof value === \"function\") {\n                    exports[key] = (...args) => {\n                        const isNestedVMCall = this.interfaceState.hasJSFrameAfterRbFrame;\n                        if (isNestedVMCall) {\n                            const oldShouldProhibitRewind = this.guest.rbSetShouldProhibitRewind(true);\n                            const oldIsDisabledGc = this.guest.rbGcDisable();\n                            const result = Reflect.apply(value, exports, args);\n                            this.guest.rbSetShouldProhibitRewind(oldShouldProhibitRewind);\n                            if (!oldIsDisabledGc) {\n                                this.guest.rbGcEnable();\n                            }\n                            return result;\n                        }\n                        else {\n                            return Reflect.apply(value, exports, args);\n                        }\n                    };\n                }\n            }\n            return exports;\n        };\n        this.guest = proxyExports(new RbAbiGuest());\n        this.transport = new JsValueTransport();\n        this.exceptionFormatter = new RbExceptionFormatter();\n    }\n    /**\n     * Initialize the Ruby VM with the given command line arguments\n     * @param args The command line arguments to pass to Ruby. Must be\n     * an array of strings starting with the Ruby program name.\n     */\n    initialize(args = [\"ruby.wasm\", \"--disable-gems\", \"-EUTF-8\", \"-e_=0\"]) {\n        const c_args = args.map((arg) => arg + \"\\0\");\n        this.guest.rubyInit();\n        this.guest.rubySysinit(c_args);\n        this.guest.rubyOptions(c_args);\n    }\n    /**\n     * Set a given instance to interact JavaScript and Ruby's\n     * WebAssembly instance. This method must be called before calling\n     * Ruby API.\n     *\n     * @param instance The WebAssembly instance to interact with. Must\n     * be instantiated from a Ruby built with JS extension, and built\n     * with Reactor ABI instead of command line.\n     */\n    async setInstance(instance) {\n        this.instance = instance;\n        await this.guest.instantiate(instance);\n    }\n    /**\n     * Add intrinsic import entries, which is necessary to interact JavaScript\n     * and Ruby's WebAssembly instance.\n     * @param imports The import object to add to the WebAssembly instance\n     */\n    addToImports(imports) {\n        this.guest.addToImports(imports);\n        function wrapTry(f) {\n            return (...args) => {\n                try {\n                    return { tag: \"success\", val: f(...args) };\n                }\n                catch (e) {\n                    if (e instanceof RbFatalError) {\n                        // RbFatalError should not be caught by Ruby because it Ruby VM\n                        // can be already in an inconsistent state.\n                        throw e;\n                    }\n                    return { tag: \"failure\", val: e };\n                }\n            };\n        }\n        imports[\"rb-js-abi-host\"] = {\n            rb_wasm_throw_prohibit_rewind_exception: (messagePtr, messageLen) => {\n                const memory = this.instance.exports.memory;\n                const str = new TextDecoder().decode(new Uint8Array(memory.buffer, messagePtr, messageLen));\n                throw new RbFatalError(\"Ruby APIs that may rewind the VM stack are prohibited under nested VM operation \" +\n                    `(${str})\\n` +\n                    \"Nested VM operation means that the call stack has sandwitched JS frames like JS -> Ruby -> JS -> Ruby \" +\n                    \"caused by something like `window.rubyVM.eval(\\\"JS.global[:rubyVM].eval('Fiber.yield')\\\")`\\n\" +\n                    \"\\n\" +\n                    \"Please check your call stack and make sure that you are **not** doing any of the following inside the nested Ruby frame:\\n\" +\n                    \"  1. Switching fibers (e.g. Fiber#resume, Fiber.yield, and Fiber#transfer)\\n\" +\n                    \"     Note that `evalAsync` JS API switches fibers internally\\n\" +\n                    \"  2. Raising uncaught exceptions\\n\" +\n                    \"     Please catch all exceptions inside the nested operation\\n\" +\n                    \"  3. Calling Continuation APIs\\n\");\n            },\n        };\n        // NOTE: The GC may collect objects that are still referenced by Wasm\n        // locals because Asyncify cannot scan the Wasm stack above the JS frame.\n        // So we need to keep track whether the JS frame is sandwitched by Ruby\n        // frames or not, and prohibit nested VM operation if it is.\n        const proxyImports = (imports) => {\n            for (const [key, value] of Object.entries(imports)) {\n                if (typeof value === \"function\") {\n                    imports[key] = (...args) => {\n                        const oldValue = this.interfaceState.hasJSFrameAfterRbFrame;\n                        this.interfaceState.hasJSFrameAfterRbFrame = true;\n                        const result = Reflect.apply(value, imports, args);\n                        this.interfaceState.hasJSFrameAfterRbFrame = oldValue;\n                        return result;\n                    };\n                }\n            }\n            return imports;\n        };\n        addRbJsAbiHostToImports(imports, proxyImports({\n            evalJs: wrapTry((code) => {\n                return Function(code)();\n            }),\n            isJs: (value) => {\n                // Just for compatibility with the old JS API\n                return true;\n            },\n            globalThis: () => {\n                if (typeof globalThis !== \"undefined\") {\n                    return globalThis;\n                }\n                else if (typeof global !== \"undefined\") {\n                    return global;\n                }\n                else if (typeof window !== \"undefined\") {\n                    return window;\n                }\n                throw new Error(\"unable to locate global object\");\n            },\n            intToJsNumber: (value) => {\n                return value;\n            },\n            floatToJsNumber: (value) => {\n                return value;\n            },\n            stringToJsString: (value) => {\n                return value;\n            },\n            boolToJsBool: (value) => {\n                return value;\n            },\n            procToJsFunction: (rawRbAbiValue) => {\n                const rbValue = this.rbValueOfPointer(rawRbAbiValue);\n                return (...args) => {\n                    rbValue.call(\"call\", ...args.map((arg) => this.wrap(arg)));\n                };\n            },\n            rbObjectToJsRbValue: (rawRbAbiValue) => {\n                return this.rbValueOfPointer(rawRbAbiValue);\n            },\n            jsValueToString: (value) => {\n                // According to the [spec](https://tc39.es/ecma262/multipage/text-processing.html#sec-string-constructor-string-value)\n                // `String(value)` always returns a string.\n                return String(value);\n            },\n            jsValueToInteger(value) {\n                if (typeof value === \"number\") {\n                    return { tag: \"f64\", val: value };\n                }\n                else if (typeof value === \"bigint\") {\n                    return { tag: \"bignum\", val: BigInt(value).toString(10) + \"\\0\" };\n                }\n                else if (typeof value === \"string\") {\n                    return { tag: \"bignum\", val: value + \"\\0\" };\n                }\n                else if (typeof value === \"undefined\") {\n                    return { tag: \"f64\", val: 0 };\n                }\n                else {\n                    return { tag: \"f64\", val: Number(value) };\n                }\n            },\n            exportJsValueToHost: (value) => {\n                // See `JsValueExporter` for the reason why we need to do this\n                this.transport.takeJsValue(value);\n            },\n            importJsValueFromHost: () => {\n                return this.transport.consumeJsValue();\n            },\n            instanceOf: (value, klass) => {\n                if (typeof klass === \"function\") {\n                    return value instanceof klass;\n                }\n                else {\n                    return false;\n                }\n            },\n            jsValueTypeof(value) {\n                return typeof value;\n            },\n            jsValueEqual(lhs, rhs) {\n                return lhs == rhs;\n            },\n            jsValueStrictlyEqual(lhs, rhs) {\n                return lhs === rhs;\n            },\n            reflectApply: wrapTry((target, thisArgument, args) => {\n                return Reflect.apply(target, thisArgument, args);\n            }),\n            reflectConstruct: function (target, args) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectDeleteProperty: function (target, propertyKey) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectGet: wrapTry((target, propertyKey) => {\n                return target[propertyKey];\n            }),\n            reflectGetOwnPropertyDescriptor: function (target, propertyKey) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectGetPrototypeOf: function (target) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectHas: function (target, propertyKey) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectIsExtensible: function (target) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectOwnKeys: function (target) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectPreventExtensions: function (target) {\n                throw new Error(\"Function not implemented.\");\n            },\n            reflectSet: wrapTry((target, propertyKey, value) => {\n                return Reflect.set(target, propertyKey, value);\n            }),\n            reflectSetPrototypeOf: function (target, prototype) {\n                throw new Error(\"Function not implemented.\");\n            },\n        }), (name) => {\n            return this.instance.exports[name];\n        });\n    }\n    /**\n     * Print the Ruby version to stdout\n     */\n    printVersion() {\n        this.guest.rubyShowVersion();\n    }\n    /**\n     * Runs a string of Ruby code from JavaScript\n     * @param code The Ruby code to run\n     * @returns the result of the last expression\n     *\n     * @example\n     * vm.eval(\"puts 'hello world'\");\n     * const result = vm.eval(\"1 + 2\");\n     * console.log(result.toString()); // 3\n     *\n     */\n    eval(code) {\n        return evalRbCode(this, this.privateObject(), code);\n    }\n    /**\n     * Runs a string of Ruby code with top-level `JS::Object#await`\n     * Returns a promise that resolves when execution completes.\n     * @param code The Ruby code to run\n     * @returns a promise that resolves to the result of the last expression\n     *\n     * @example\n     * const text = await vm.evalAsync(`\n     *   require 'js'\n     *   response = JS.global.fetch('https://example.com').await\n     *   response.text.await\n     * `);\n     * console.log(text.toString()); // <html>...</html>\n     */\n    evalAsync(code) {\n        const JS = this.eval(\"require 'js'; JS\");\n        return new Promise((resolve, reject) => {\n            JS.call(\"__eval_async_rb\", this.wrap(code), this.wrap({\n                resolve,\n                reject: (error) => {\n                    reject(new RbError(this.exceptionFormatter.format(error, this, this.privateObject())));\n                },\n            }));\n        });\n    }\n    /**\n     * Wrap a JavaScript value into a Ruby JS::Object\n     * @param value The value to convert to RbValue\n     * @returns the RbValue object representing the given JS value\n     *\n     * @example\n     * const hash = vm.eval(`Hash.new`)\n     * hash.call(\"store\", vm.eval(`\"key1\"`), vm.wrap(new Object()));\n     */\n    wrap(value) {\n        return this.transport.importJsValue(value, this);\n    }\n    privateObject() {\n        return {\n            transport: this.transport,\n            exceptionFormatter: this.exceptionFormatter,\n        };\n    }\n    rbValueOfPointer(pointer) {\n        const abiValue = new RbAbiValue(pointer, this.guest);\n        return new RbValue(abiValue, this, this.privateObject());\n    }\n}\n/**\n * Export a JS value held by the Ruby VM to the JS environment.\n * This is implemented in a dirty way since wit cannot reference resources\n * defined in other interfaces.\n * In our case, we can't express `function(v: rb-abi-value) -> js-abi-value`\n * because `rb-js-abi-host.wit`, that defines `js-abi-value`, is implemented\n * by embedder side (JS) but `rb-abi-guest.wit`, that defines `rb-abi-value`\n * is implemented by guest side (Wasm).\n *\n * This class is a helper to export by:\n * 1. Call `function __export_to_js(v: rb-abi-value)` defined in guest from embedder side.\n * 2. Call `function takeJsValue(v: js-abi-value)` defined in embedder from guest side with\n *    underlying JS value of given `rb-abi-value`.\n * 3. Then `takeJsValue` implementation escapes the given JS value to the `_takenJsValues`\n *    stored in embedder side.\n * 4. Finally, embedder side can take `_takenJsValues`.\n *\n * Note that `exportJsValue` is not reentrant.\n *\n * @private\n */\nclass JsValueTransport {\n    constructor() {\n        this._takenJsValue = null;\n    }\n    takeJsValue(value) {\n        this._takenJsValue = value;\n    }\n    consumeJsValue() {\n        return this._takenJsValue;\n    }\n    exportJsValue(value) {\n        value.call(\"__export_to_js\");\n        return this._takenJsValue;\n    }\n    importJsValue(value, vm) {\n        this._takenJsValue = value;\n        return vm.eval('require \"js\"; JS::Object').call(\"__import_from_js\");\n    }\n}\n/**\n * A RbValue is an object that represents a value in Ruby\n */\nclass RbValue {\n    /**\n     * @hideconstructor\n     */\n    constructor(inner, vm, privateObject) {\n        this.inner = inner;\n        this.vm = vm;\n        this.privateObject = privateObject;\n    }\n    /**\n     * Call a given method with given arguments\n     *\n     * @param callee name of the Ruby method to call\n     * @param args arguments to pass to the method. Must be an array of RbValue\n     *\n     * @example\n     * const ary = vm.eval(\"[1, 2, 3]\");\n     * ary.call(\"push\", 4);\n     * console.log(ary.call(\"sample\").toString());\n     *\n     */\n    call(callee, ...args) {\n        const innerArgs = args.map((arg) => arg.inner);\n        return new RbValue(callRbMethod(this.vm, this.privateObject, this.inner, callee, innerArgs), this.vm, this.privateObject);\n    }\n    /**\n     * @see {@link https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive}\n     * @param hint Preferred type of the result primitive value. `\"number\"`, `\"string\"`, or `\"default\"`.\n     */\n    [Symbol.toPrimitive](hint) {\n        if (hint === \"string\" || hint === \"default\") {\n            return this.toString();\n        }\n        else if (hint === \"number\") {\n            return null;\n        }\n        return null;\n    }\n    /**\n     * Returns a string representation of the value by calling `to_s`\n     */\n    toString() {\n        const rbString = callRbMethod(this.vm, this.privateObject, this.inner, \"to_s\", []);\n        return this.vm.guest.rstringPtr(rbString);\n    }\n    /**\n     * Returns a JavaScript object representation of the value\n     * by calling `to_js`.\n     *\n     * Returns null if the value is not convertible to a JavaScript object.\n     */\n    toJS() {\n        const JS = this.vm.eval(\"JS\");\n        const jsValue = JS.call(\"try_convert\", this);\n        if (jsValue.call(\"nil?\").toString() === \"true\") {\n            return null;\n        }\n        return this.privateObject.transport.exportJsValue(jsValue);\n    }\n}\nvar ruby_tag_type;\n(function (ruby_tag_type) {\n    ruby_tag_type[ruby_tag_type[\"None\"] = 0] = \"None\";\n    ruby_tag_type[ruby_tag_type[\"Return\"] = 1] = \"Return\";\n    ruby_tag_type[ruby_tag_type[\"Break\"] = 2] = \"Break\";\n    ruby_tag_type[ruby_tag_type[\"Next\"] = 3] = \"Next\";\n    ruby_tag_type[ruby_tag_type[\"Retry\"] = 4] = \"Retry\";\n    ruby_tag_type[ruby_tag_type[\"Redo\"] = 5] = \"Redo\";\n    ruby_tag_type[ruby_tag_type[\"Raise\"] = 6] = \"Raise\";\n    ruby_tag_type[ruby_tag_type[\"Throw\"] = 7] = \"Throw\";\n    ruby_tag_type[ruby_tag_type[\"Fatal\"] = 8] = \"Fatal\";\n    ruby_tag_type[ruby_tag_type[\"Mask\"] = 15] = \"Mask\";\n})(ruby_tag_type || (ruby_tag_type = {}));\nclass RbExceptionFormatter {\n    constructor() {\n        this.literalsCache = null;\n    }\n    format(error, vm, privateObject) {\n        const [zeroLiteral, oneLiteral, newLineLiteral] = (() => {\n            if (this.literalsCache == null) {\n                const zeroOneNewLine = [\n                    evalRbCode(vm, privateObject, \"0\"),\n                    evalRbCode(vm, privateObject, \"1\"),\n                    evalRbCode(vm, privateObject, `\"\\n\"`),\n                ];\n                this.literalsCache = zeroOneNewLine;\n                return zeroOneNewLine;\n            }\n            else {\n                return this.literalsCache;\n            }\n        })();\n        const backtrace = error.call(\"backtrace\");\n        if (backtrace.call(\"nil?\").toString() === \"true\") {\n            return this.formatString(error.call(\"class\").toString(), error.toString());\n        }\n        const firstLine = backtrace.call(\"at\", zeroLiteral);\n        const restLines = backtrace\n            .call(\"drop\", oneLiteral)\n            .call(\"join\", newLineLiteral);\n        return this.formatString(error.call(\"class\").toString(), error.toString(), [\n            firstLine.toString(),\n            restLines.toString(),\n        ]);\n    }\n    formatString(klass, message, backtrace) {\n        if (backtrace) {\n            return `${backtrace[0]}: ${message} (${klass})\\n${backtrace[1]}`;\n        }\n        else {\n            return `${klass}: ${message}`;\n        }\n    }\n}\nconst checkStatusTag = (rawTag, vm, privateObject) => {\n    switch (rawTag & ruby_tag_type.Mask) {\n        case ruby_tag_type.None:\n            break;\n        case ruby_tag_type.Return:\n            throw new RbError(\"unexpected return\");\n        case ruby_tag_type.Next:\n            throw new RbError(\"unexpected next\");\n        case ruby_tag_type.Break:\n            throw new RbError(\"unexpected break\");\n        case ruby_tag_type.Redo:\n            throw new RbError(\"unexpected redo\");\n        case ruby_tag_type.Retry:\n            throw new RbError(\"retry outside of rescue clause\");\n        case ruby_tag_type.Throw:\n            throw new RbError(\"unexpected throw\");\n        case ruby_tag_type.Raise:\n        case ruby_tag_type.Fatal:\n            const error = new RbValue(vm.guest.rbErrinfo(), vm, privateObject);\n            if (error.call(\"nil?\").toString() === \"true\") {\n                throw new RbError(\"no exception object\");\n            }\n            // clear errinfo if got exception due to no rb_jump_tag\n            vm.guest.rbClearErrinfo();\n            throw new RbError(privateObject.exceptionFormatter.format(error, vm, privateObject));\n        default:\n            throw new RbError(`unknown error tag: ${rawTag}`);\n    }\n};\nfunction wrapRbOperation(vm, body) {\n    try {\n        return body();\n    }\n    catch (e) {\n        if (e instanceof RbError) {\n            throw e;\n        }\n        // All JS exceptions triggered by Ruby code are translated to Ruby exceptions,\n        // so non-RbError exceptions are unexpected.\n        vm.guest.rbVmBugreport();\n        if (e instanceof WebAssembly.RuntimeError && e.message === \"unreachable\") {\n            const error = new RbError(`Something went wrong in Ruby VM: ${e}`);\n            error.stack = e.stack;\n            throw error;\n        }\n        else {\n            throw e;\n        }\n    }\n}\nconst callRbMethod = (vm, privateObject, recv, callee, args) => {\n    const mid = vm.guest.rbIntern(callee + \"\\0\");\n    return wrapRbOperation(vm, () => {\n        const [value, status] = vm.guest.rbFuncallvProtect(recv, mid, args);\n        checkStatusTag(status, vm, privateObject);\n        return value;\n    });\n};\nconst evalRbCode = (vm, privateObject, code) => {\n    return wrapRbOperation(vm, () => {\n        const [value, status] = vm.guest.rbEvalStringProtect(code + \"\\0\");\n        checkStatusTag(status, vm, privateObject);\n        return new RbValue(value, vm, privateObject);\n    });\n};\n/**\n * Error class thrown by Ruby execution\n */\nclass RbError extends Error {\n    /**\n     * @hideconstructor\n     */\n    constructor(message) {\n        super(message);\n    }\n}\n/**\n * Error class thrown by Ruby execution when it is not possible to recover.\n * This is usually caused when Ruby VM is in an inconsistent state.\n */\nclass RbFatalError extends RbError {\n    /**\n     * @hideconstructor\n     */\n    constructor(message) {\n        super(\"Ruby Fatal Error: \" + message);\n    }\n}\n\nexport { RbError, RbFatalError, RbValue, RubyVM };\n","export class KeyEventBuffer {\n  buffer: [number, boolean][];\n  constructor(buffer: [number, boolean][]) {\n    this.buffer = buffer;\n  }\n\n  consume(): [number, boolean] | null {\n    if (this.buffer.length === 0) {\n      return null;\n    }\n    return this.buffer.shift();\n  }\n\n  push(code: number, pressed: boolean) {\n    this.buffer.push([code, pressed]);\n  }\n}\n","import * as Comlink from \"comlink\";\nimport { Directory, File, OpenFile, PreopenDirectory, WASI } from \"@bjorn3/browser_wasi_shim/dist/index\"\nimport { RubyVM } from \"@ruby/wasm-wasi\";\nimport { KeyEventBuffer } from \"./key-event-bus\";\n\nexport type ProgressInput =\n  | {\n    kind: \"progress\";\n    value: number;\n  }\n  | {\n    kind: \"message\";\n    value: string;\n  }\n  | {\n    kind: \"error\";\n    message: string;\n  }\n  | {\n    kind: \"done\";\n  };\n\nexport type Options = {\n  opt: boolean;\n  headless: boolean;\n  rom: string;\n};\n\nexport interface OptcarrotWorkerPort {\n  init(\n    options: Options,\n    render: (image: Uint8Array) => void,\n    playAudio: (audio: Int16Array) => void,\n    progress: (input: ProgressInput) => void\n  ): void;\n  pushKeyEvent(code: number, pressed: boolean): void;\n}\n\nconst OPTCARROT_HEADLESS_DRIVER = `\nmodule Optcarrot\n  # Audio output driver for Web Audio API\n  class WebAudioAudio < Audio\n    def tick(output)\n      JS::eval(\"globalThis.Optcarrot.tickAudio()\")\n    end\n  end\n  # Video output driver for Web Canvas\n  class CanvasVideo < Video\n    def tick(screen)\n      JS::eval(\"globalThis.Optcarrot.tickVideo()\")\n    end\n  end\n  BrowserInput = Input\nend\n`;\n\nconst OPTCARROT_WEB_DRIVER = `\nmodule Optcarrot\n  # Audio output driver for Web Audio API\n  class WebAudioAudio < Audio\n    def tick(output)\n      bin = output.pack(@pack_format)\n      File.binwrite(File.join(\"/OPTCARROT_TMP/audio.data\"), bin)\n      JS::eval(\"globalThis.Optcarrot.tickAudio()\")\n    rescue => e\n      JS.global[:console].warn(e.inspect)\n    end\n  end\n  # Video output driver for Web Canvas\n  class CanvasVideo < Video\n    def init\n      super\n      @palette = @palette_rgb.map do |r, g, b|\n        0xff000000 | (b << 16) | (g << 8) | r\n      end\n    end\n\n    def dispose\n    end\n\n    def tick(screen)\n      bin = screen.pack(\"L*\")\n      File.binwrite(File.join(\"/OPTCARROT_TMP\", File.basename(@conf.video_output, \".EXT\") + \".data\"), bin)\n      JS::eval(\"globalThis.Optcarrot.tickVideo()\")\n      super\n    rescue => e\n      JS.global[:console].warn(e.inspect)\n    end\n  end\n  # Input driver for browser input\n  class BrowserInput < Input\n    def init\n    end\n\n    def dispose\n    end\n\n    def tick(frame, pads)\n      event = JS::eval(\"return globalThis.Optcarrot.fetchKeyEvent()\").inspect\n      return if event == \"\"\n      code, pressed = event.split(\",\")\n      code = code.to_i\n      if pressed == \"true\"\n        pads.keydown(0, code)\n      else\n        pads.keyup(0, code)\n      end\n    end\n  end\nend\n`;\n\nexport class Optcarrot implements OptcarrotWorkerPort {\n  rootFs: { [key: string]: File | Directory } = {};\n  wasi: WASI;\n  vm: RubyVM;\n  keyEventConsumer: KeyEventBuffer;\n\n  tickVideo: () => void;\n  tickAudio: () => void;\n  remoteRender: (image: Uint8Array) => void;\n  remotePlayAudio: (audio: Int16Array) => void;\n\n  constructor() {\n    const rootContents = {}\n    rootContents[\"OPTCARROT_TMP\"] = new Directory({})\n    this.rootFs = rootContents\n\n    const args = [\"ruby.wasm\", \"-e_=0\"];\n    this.wasi = new WASI(args, [], [\n      new OpenFile(new File([])), // stdin\n      new OpenFile(new File([])), // stdout\n      new OpenFile(new File([])), // stderr\n      new PreopenDirectory(\"/\", rootContents)\n    ], {\n      debug: false\n    });\n    this.keyEventConsumer = new KeyEventBuffer([]);\n  }\n\n  computeOptions(options: Options): string[] {\n    const optionsArray: string[] = [];\n    const ROMS = {\n      \"Lan_Master.nes\": \"/optcarrot/examples/Lan_Master.nes\",\n    };\n    if (options.opt) {\n      optionsArray.push(\"--opt\");\n    }\n    if (ROMS[options.rom]) {\n      optionsArray.push(ROMS[options.rom]);\n    } else {\n      throw new Error(`Unknown ROM: ${options.rom}`);\n    }\n    return optionsArray;\n  }\n\n  async init(\n    options: Options,\n    render: (image: Uint8Array) => void,\n    playAudio: (audio: Int16Array) => void,\n    progress: (input: ProgressInput) => void\n  ) {\n    this.remoteRender = render;\n    this.remotePlayAudio = playAudio;\n\n    // Fetch and instantiate WebAssembly binary\n    progress({ kind: \"message\", value: \"Downloading...\" });\n    progress({ kind: \"progress\", value: 0 });\n    const response = await fetch(\"./optcarrot.wasm\");\n    const buffer = await response.arrayBuffer();\n    progress({ kind: \"progress\", value: 0.2 });\n    progress({ kind: \"message\", value: \"Instantiating Optcarrot...\" });\n\n    const imports = {\n      wasi_snapshot_preview1: this.wasi.wasiImport,\n    };\n    const vm = new RubyVM();\n    vm.addToImports(imports);\n\n    // Instantiate the WebAssembly module\n    const { instance } = await WebAssembly.instantiate(buffer, imports);\n    await vm.setInstance(instance);\n    progress({ kind: \"progress\", value: 0.3 });\n\n    // Initialize WASI application\n    this.wasi.initialize(instance as any);\n\n    // Initialize Ruby VM\n    vm.initialize();\n    progress({ kind: \"progress\", value: 0.6 });\n\n    console.time(\"init-optcarrot\");\n    console.log(\"Options:\", options);\n    vm.eval(`\n      require \"js\"\n      JS::eval(\"console.time('require-optcarrot')\")\n      require_relative \"/optcarrot/lib/optcarrot.rb\"\n      JS::eval(\"console.timeEnd('require-optcarrot')\")\n    `);\n    progress({ kind: \"progress\", value: 0.8 });\n\n    this.tickVideo = options.headless\n      ? () => {\n          this.remoteRender(new Uint8Array());\n        }\n      : () => {\n          const bytes = this.videoBytes();\n          this.remoteRender(Comlink.transfer(bytes, [bytes.buffer]));\n        };\n\n    this.tickAudio = options.headless\n      ? () => {\n          this.remotePlayAudio(new Int16Array());\n        }\n      : () => {\n          const bytes = this.audioBytes();\n          this.remotePlayAudio(Comlink.transfer(bytes, [bytes.buffer]));\n        };\n\n    vm.eval(`\n      ${options.headless ? OPTCARROT_HEADLESS_DRIVER : OPTCARROT_WEB_DRIVER}\n\n      # Monkey patch the Optcarrot to use web drivers\n      Optcarrot::Driver.define_singleton_method(:load) do |conf|\n        video = Optcarrot::CanvasVideo.new(conf)\n        audio = Optcarrot::WebAudioAudio.new(conf)\n        input = Optcarrot::BrowserInput.new(conf, video)\n        [video, audio, input]\n      end\n\n      args = [\n          ${this.computeOptions(options)\n            .map((option) => `\"${option}\"`)\n            .join(\", \")},\n          \"--audio-sample-rate=11050\",\n      ]\n      JS::eval(\"console.time('Optcarrot::NES.new')\")\n      $nes = Optcarrot::NES.new(args)\n      JS::eval(\"console.timeEnd('Optcarrot::NES.new')\")\n    `);\n    progress({ kind: \"progress\", value: 1 });\n    progress({ kind: \"done\" });\n    vm.eval(`$nes.reset`);\n    this.vm = vm;\n    this.run();\n  }\n\n  run() {\n    setTimeout(this.run.bind(this), 0);\n    this.vm.eval(`$nes.step`);\n  }\n\n  videoBytes(): Uint8Array {\n    const tmpDir = this.rootFs[\"OPTCARROT_TMP\"] as Directory\n    const data = tmpDir.get_entry_for_path(\"video.data\") as File\n    return data.data\n  }\n\n  audioBytes(): Int16Array {\n    const tmpDir = this.rootFs[\"OPTCARROT_TMP\"] as Directory\n    const data = tmpDir.get_entry_for_path(\"audio.data\") as File\n    return new Int16Array(data.data.buffer)\n  }\n\n  pushKeyEvent(code: number, pressed: boolean): void {\n    this.keyEventConsumer.push(code, pressed);\n  }\n\n  fetchKeyEvent(): string {\n    const event = this.keyEventConsumer.consume();\n    if (!event) return \"\";\n    return event.join(\",\");\n  }\n}\n\nconst main = () => {\n  const optcarrot = new Optcarrot();\n  // @ts-ignore\n  globalThis.Optcarrot = optcarrot;\n\n  Comlink.expose({\n    init(\n      options: Options,\n      render: (image: Uint8Array) => void,\n      playAudio: (audio: Int16Array) => void,\n      progress: (input: ProgressInput) => void\n    ): void {\n      try {\n        optcarrot.init(options, render, playAudio, progress).catch((e) => {\n          progress({\n            kind: \"error\",\n            message: \"Failed to initialize Optcarrot: \" + e.message,\n          });\n        });\n      } catch (e) {\n        progress({\n          kind: \"error\",\n          message: \"Failed to initialize Optcarrot: \" + e.message,\n        });\n      }\n    },\n    pushKeyEvent(code: number, pressed: boolean): void {\n      optcarrot.pushKeyEvent(code, pressed);\n    },\n  });\n};\n\nif (\n  // @ts-ignore\n  typeof WorkerGlobalScope !== \"undefined\" &&\n  // @ts-ignore\n  self instanceof WorkerGlobalScope\n) {\n  main();\n}\n","import*as wasi from\"./wasi_defs.js\";import{debug}from\"./debug.js\";let WASI=class WASI{start(instance){this.inst=instance;instance.exports._start()}initialize(instance){this.inst=instance;instance.exports._initialize()}constructor(args,env,fds,options={}){this.args=[];this.env=[];this.fds=[];debug.enable(options.debug);this.args=args;this.env=env;this.fds=fds;const self=this;this.wasiImport={args_sizes_get(argc,argv_buf_size){const buffer=new DataView(self.inst.exports.memory.buffer);buffer.setUint32(argc,self.args.length,true);let buf_size=0;for(const arg of self.args){buf_size+=arg.length+1}buffer.setUint32(argv_buf_size,buf_size,true);debug.log(buffer.getUint32(argc,true),buffer.getUint32(argv_buf_size,true));return 0},args_get(argv,argv_buf){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);const orig_argv_buf=argv_buf;for(let i=0;i<self.args.length;i++){buffer.setUint32(argv,argv_buf,true);argv+=4;const arg=new TextEncoder().encode(self.args[i]);buffer8.set(arg,argv_buf);buffer.setUint8(argv_buf+arg.length,0);argv_buf+=arg.length+1}if(debug.enabled){debug.log(new TextDecoder(\"utf-8\").decode(buffer8.slice(orig_argv_buf,argv_buf)))}return 0},environ_sizes_get(environ_count,environ_size){const buffer=new DataView(self.inst.exports.memory.buffer);buffer.setUint32(environ_count,self.env.length,true);let buf_size=0;for(const environ of self.env){buf_size+=environ.length+1}buffer.setUint32(environ_size,buf_size,true);debug.log(buffer.getUint32(environ_count,true),buffer.getUint32(environ_size,true));return 0},environ_get(environ,environ_buf){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);const orig_environ_buf=environ_buf;for(let i=0;i<self.env.length;i++){buffer.setUint32(environ,environ_buf,true);environ+=4;const e=new TextEncoder().encode(self.env[i]);buffer8.set(e,environ_buf);buffer.setUint8(environ_buf+e.length,0);environ_buf+=e.length+1}if(debug.enabled){debug.log(new TextDecoder(\"utf-8\").decode(buffer8.slice(orig_environ_buf,environ_buf)))}return 0},clock_res_get(id,res_ptr){throw\"unimplemented\"},clock_time_get(id,precision,time){const buffer=new DataView(self.inst.exports.memory.buffer);if(id===wasi.CLOCKID_REALTIME){buffer.setBigUint64(time,BigInt(new Date().getTime())*1000000n,true)}else if(id==wasi.CLOCKID_MONOTONIC){let monotonic_time;try{monotonic_time=BigInt(Math.round(performance.now()*1e6))}catch(e){monotonic_time=0n}buffer.setBigUint64(time,monotonic_time,true)}else{buffer.setBigUint64(time,0n,true)}return 0},fd_advise(fd,offset,len,advice){if(self.fds[fd]!=undefined){return self.fds[fd].fd_advise(offset,len,advice)}else{return wasi.ERRNO_BADF}},fd_allocate(fd,offset,len){if(self.fds[fd]!=undefined){return self.fds[fd].fd_allocate(offset,len)}else{return wasi.ERRNO_BADF}},fd_close(fd){if(self.fds[fd]!=undefined){const ret=self.fds[fd].fd_close();self.fds[fd]=undefined;return ret}else{return wasi.ERRNO_BADF}},fd_datasync(fd){if(self.fds[fd]!=undefined){return self.fds[fd].fd_datasync()}else{return wasi.ERRNO_BADF}},fd_fdstat_get(fd,fdstat_ptr){if(self.fds[fd]!=undefined){const{ret,fdstat}=self.fds[fd].fd_fdstat_get();if(fdstat!=null){fdstat.write_bytes(new DataView(self.inst.exports.memory.buffer),fdstat_ptr)}return ret}else{return wasi.ERRNO_BADF}},fd_fdstat_set_flags(fd,flags){if(self.fds[fd]!=undefined){return self.fds[fd].fd_fdstat_set_flags(flags)}else{return wasi.ERRNO_BADF}},fd_fdstat_set_rights(fd,fs_rights_base,fs_rights_inheriting){if(self.fds[fd]!=undefined){return self.fds[fd].fd_fdstat_set_rights(fs_rights_base,fs_rights_inheriting)}else{return wasi.ERRNO_BADF}},fd_filestat_get(fd,filestat_ptr){if(self.fds[fd]!=undefined){const{ret,filestat}=self.fds[fd].fd_filestat_get();if(filestat!=null){filestat.write_bytes(new DataView(self.inst.exports.memory.buffer),filestat_ptr)}return ret}else{return wasi.ERRNO_BADF}},fd_filestat_set_size(fd,size){if(self.fds[fd]!=undefined){return self.fds[fd].fd_filestat_set_size(size)}else{return wasi.ERRNO_BADF}},fd_filestat_set_times(fd,atim,mtim,fst_flags){if(self.fds[fd]!=undefined){return self.fds[fd].fd_filestat_set_times(atim,mtim,fst_flags)}else{return wasi.ERRNO_BADF}},fd_pread(fd,iovs_ptr,iovs_len,offset,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Iovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nread}=self.fds[fd].fd_pread(buffer8,iovecs,offset);buffer.setUint32(nread_ptr,nread,true);return ret}else{return wasi.ERRNO_BADF}},fd_prestat_get(fd,buf_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,prestat}=self.fds[fd].fd_prestat_get();if(prestat!=null){prestat.write_bytes(buffer,buf_ptr)}return ret}else{return wasi.ERRNO_BADF}},fd_prestat_dir_name(fd,path_ptr,path_len){if(self.fds[fd]!=undefined){const{ret,prestat_dir_name}=self.fds[fd].fd_prestat_dir_name();if(prestat_dir_name!=null){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);buffer8.set(prestat_dir_name,path_ptr)}return ret}else{return wasi.ERRNO_BADF}},fd_pwrite(fd,iovs_ptr,iovs_len,offset,nwritten_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Ciovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nwritten}=self.fds[fd].fd_pwrite(buffer8,iovecs,offset);buffer.setUint32(nwritten_ptr,nwritten,true);return ret}else{return wasi.ERRNO_BADF}},fd_read(fd,iovs_ptr,iovs_len,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Iovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nread}=self.fds[fd].fd_read(buffer8,iovecs);buffer.setUint32(nread_ptr,nread,true);return ret}else{return wasi.ERRNO_BADF}},fd_readdir(fd,buf,buf_len,cookie,bufused_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){let bufused=0;while(true){const{ret,dirent}=self.fds[fd].fd_readdir_single(cookie);if(ret!=0){buffer.setUint32(bufused_ptr,bufused,true);return ret}if(dirent==null){break}if(buf_len-bufused<dirent.head_length()){bufused=buf_len;break}const head_bytes=new ArrayBuffer(dirent.head_length());dirent.write_head_bytes(new DataView(head_bytes),0);buffer8.set(new Uint8Array(head_bytes).slice(0,Math.min(head_bytes.byteLength,buf_len-bufused)),buf);buf+=dirent.head_length();bufused+=dirent.head_length();if(buf_len-bufused<dirent.name_length()){bufused=buf_len;break}dirent.write_name_bytes(buffer8,buf,buf_len-bufused);buf+=dirent.name_length();bufused+=dirent.name_length();cookie=dirent.d_next}buffer.setUint32(bufused_ptr,bufused,true);return 0}else{return wasi.ERRNO_BADF}},fd_renumber(fd,to){if(self.fds[fd]!=undefined&&self.fds[to]!=undefined){const ret=self.fds[to].fd_close();if(ret!=0){return ret}self.fds[to]=self.fds[fd];self.fds[fd]=undefined;return 0}else{return wasi.ERRNO_BADF}},fd_seek(fd,offset,whence,offset_out_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,offset:offset_out}=self.fds[fd].fd_seek(offset,whence);buffer.setBigInt64(offset_out_ptr,offset_out,true);return ret}else{return wasi.ERRNO_BADF}},fd_sync(fd){if(self.fds[fd]!=undefined){return self.fds[fd].fd_sync()}else{return wasi.ERRNO_BADF}},fd_tell(fd,offset_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const{ret,offset}=self.fds[fd].fd_tell();buffer.setBigUint64(offset_ptr,offset,true);return ret}else{return wasi.ERRNO_BADF}},fd_write(fd,iovs_ptr,iovs_len,nwritten_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const iovecs=wasi.Ciovec.read_bytes_array(buffer,iovs_ptr,iovs_len);const{ret,nwritten}=self.fds[fd].fd_write(buffer8,iovecs);buffer.setUint32(nwritten_ptr,nwritten,true);return ret}else{return wasi.ERRNO_BADF}},path_create_directory(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_create_directory(path)}},path_filestat_get(fd,flags,path_ptr,path_len,filestat_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));const{ret,filestat}=self.fds[fd].path_filestat_get(flags,path);if(filestat!=null){filestat.write_bytes(buffer,filestat_ptr)}return ret}else{return wasi.ERRNO_BADF}},path_filestat_set_times(fd,flags,path_ptr,path_len,atim,mtim,fst_flags){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_filestat_set_times(flags,path,atim,mtim,fst_flags)}else{return wasi.ERRNO_BADF}},path_link(old_fd,old_flags,old_path_ptr,old_path_len,new_fd,new_path_ptr,new_path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[old_fd]!=undefined&&self.fds[new_fd]!=undefined){const old_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(old_path_ptr,old_path_ptr+old_path_len));const new_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(new_path_ptr,new_path_ptr+new_path_len));return self.fds[new_fd].path_link(old_fd,old_flags,old_path,new_path)}else{return wasi.ERRNO_BADF}},path_open(fd,dirflags,path_ptr,path_len,oflags,fs_rights_base,fs_rights_inheriting,fd_flags,opened_fd_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));debug.log(path);const{ret,fd_obj}=self.fds[fd].path_open(dirflags,path,oflags,fs_rights_base,fs_rights_inheriting,fd_flags);if(ret!=0){return ret}self.fds.push(fd_obj);const opened_fd=self.fds.length-1;buffer.setUint32(opened_fd_ptr,opened_fd,true);return 0}else{return wasi.ERRNO_BADF}},path_readlink(fd,path_ptr,path_len,buf_ptr,buf_len,nread_ptr){const buffer=new DataView(self.inst.exports.memory.buffer);const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));debug.log(path);const{ret,data}=self.fds[fd].path_readlink(path);if(data!=null){if(data.length>buf_len){buffer.setUint32(nread_ptr,0,true);return wasi.ERRNO_BADF}buffer8.set(data,buf_ptr);buffer.setUint32(nread_ptr,data.length,true)}return ret}else{return wasi.ERRNO_BADF}},path_remove_directory(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_remove_directory(path)}else{return wasi.ERRNO_BADF}},path_rename(fd,old_path_ptr,old_path_len,new_fd,new_path_ptr,new_path_len){throw\"FIXME what is the best abstraction for this?\"},path_symlink(old_path_ptr,old_path_len,fd,new_path_ptr,new_path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const old_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(old_path_ptr,old_path_ptr+old_path_len));const new_path=new TextDecoder(\"utf-8\").decode(buffer8.slice(new_path_ptr,new_path_ptr+new_path_len));return self.fds[fd].path_symlink(old_path,new_path)}else{return wasi.ERRNO_BADF}},path_unlink_file(fd,path_ptr,path_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);if(self.fds[fd]!=undefined){const path=new TextDecoder(\"utf-8\").decode(buffer8.slice(path_ptr,path_ptr+path_len));return self.fds[fd].path_unlink_file(path)}else{return wasi.ERRNO_BADF}},poll_oneoff(in_,out,nsubscriptions){throw\"async io not supported\"},proc_exit(exit_code){throw\"exit with exit code \"+exit_code},proc_raise(sig){throw\"raised signal \"+sig},sched_yield(){},random_get(buf,buf_len){const buffer8=new Uint8Array(self.inst.exports.memory.buffer);for(let i=0;i<buf_len;i++){buffer8[buf+i]=Math.random()*256|0}},sock_recv(fd,ri_data,ri_flags){throw\"sockets not supported\"},sock_send(fd,si_data,si_flags){throw\"sockets not supported\"},sock_shutdown(fd,how){throw\"sockets not supported\"},sock_accept(fd,flags){throw\"sockets not supported\"}}}};export{WASI as default};"],"names":["$9d65ffd50b68f22a$export$be5234c0b764b6e0","Symbol","val","$9d65ffd50b68f22a$export$ab8f1c00731ee83e","Map","$9d65ffd50b68f22a$var$isObject","serialize","obj","port1","port2","MessageChannel","port","target","value","$9d65ffd50b68f22a$var$throwMarker","serialized","Error","isError","message","name","stack","Object","assign","obj1","ep","self","callback","ev","data","id","type","path","argumentList","map","$9d65ffd50b68f22a$var$fromWireValue","slice","reduce","prop","rawValue","returnValue1","apply","parent","$9d65ffd50b68f22a$export$9b7f6e342a8cbd38","$9d65ffd50b68f22a$export$c9b234447cf4ef7c","undefined","value1","Promise","resolve","catch","then","returnValue","wireValue","transferables","$9d65ffd50b68f22a$var$toWireValue","postMessage","removeEventListener","$9d65ffd50b68f22a$var$closeEndPoint","start","endpoint","constructor","close","isReleased","Proxy","isProxyReleased","$9d65ffd50b68f22a$var$requestResponseMessage","p","toString","r","bind","_target","$9d65ffd50b68f22a$var$throwIfProxyReleased","_thisArg","rawArgumentList","last","length","$9d65ffd50b68f22a$export$39fb953702b7fcd7","$9d65ffd50b68f22a$var$createProxy","$9d65ffd50b68f22a$var$processArguments","construct","$9d65ffd50b68f22a$export$923f96dd5afa9ce6","processed","v","arr","Array","prototype","concat","$9d65ffd50b68f22a$var$transferCache","WeakMap","transfers","set","handler","canHandle","serializedValue","get","deserialize","msg","$10ec04b8969fd601$export$a6d8551163b25e7d","view","ptr","iovec","buf","getUint32","buf_len","len","iovecs","i","push","read_bytes","$10ec04b8969fd601$export$9433c4a0191b4507","$10ec04b8969fd601$export$c7179ef11cae3382","head_length","name_length","this","dir_name","byteLength","write_head_bytes","setBigUint64","d_next","d_ino","setUint32","setUint8","d_type","write_name_bytes","view8","Math","min","next_cookie","encoded_name","TextEncoder","encode","d_namlen","$10ec04b8969fd601$export$548d19b2b1235676","write_bytes","fs_filetype","setUint16","fs_flags","fs_rights_base","fs_rights_inherited","filetype","flags","$10ec04b8969fd601$export$5ccc6d59695a08","dev","ino","nlink","size","atim","mtim","ctim","$10ec04b8969fd601$export$9a84b57910e83b78","pr_name_len","name_len","$10ec04b8969fd601$export$8b650493b9c7ba11","prestat","tag","inner","$fdb129395da0ad76$export$1c9f709888824e05","enable","enabled","log","prefix","console","$fdb129395da0ad76$var$createLogger","isEnabled","$94361170ca18c341$export$c0a50da58385506f","fd_advise","offset","advice","fd_allocate","fd_close","fd_datasync","fd_fdstat_get","ret","fdstat","fd_fdstat_set_flags","fd_fdstat_set_rights","fs_rights_inheriting","fd_filestat_get","filestat","fd_filestat_set_size","fd_filestat_set_times","fst_flags","fd_pread","iovs","nread","fd_prestat_get","fd_prestat_dir_name","prestat_dir_name","fd_pwrite","nwritten","fd_read","fd_readdir_single","cookie","dirent","fd_seek","whence","fd_sync","fd_tell","fd_write","path_create_directory","path_filestat_get","path_filestat_set_times","path_link","old_fd","old_flags","old_path","new_path","path_open","dirflags","oflags","fdflags","fd_obj","path_readlink","path_remove_directory","path_rename","new_fd","path_symlink","path_unlink_file","$0d5dfdf915f01519$export$f0382002eea5fa78","file_pos","file","Number","BigInt","calculated_offset","readonly","buffer","old","Uint8Array","stat","super","$0d5dfdf915f01519$export$3bdf71105e7d4134","keys","dir","contents","entry","get_entry_for_path","fd_flags","create_entry_for_path","$941375f0a25bb938$export$1dbf9926a0d54d98","truncate","open","$10ec04b8969fd601$export$3f80d5ae3d18e936","$0d5dfdf915f01519$export$db40f346fa6c0ce9","prestat_name","$941375f0a25bb938$export$b6afa8811b7e644e","options","component","split","is_dir","components","filter","ArrayBuffer","$808b0f284ad35151$var$DATA_VIEW","DataView","$808b0f284ad35151$var$data_view","mem","$808b0f284ad35151$var$UTF8_DECODER","TextDecoder","$808b0f284ad35151$var$UTF8_ENCODER","$808b0f284ad35151$var$utf8_encode","s","realloc","memory","TypeError","$808b0f284ad35151$var$UTF8_ENCODED_LEN","alloc_len","writtenTotal","read","written","encodeInto","$808b0f284ad35151$var$Slab","list","head","insert","next","slot","idx","RangeError","remove","$808b0f284ad35151$var$throw_invalid_bool","$808b0f284ad35151$var$RbAbiGuest","_resource0_slab","_resource1_slab","addToImports","imports","canonical_abi","drop","clone","_wasm_val","_registry0","$808b0f284ad35151$var$RbIseq","_registry1","$808b0f284ad35151$var$RbAbiValue","module","WebAssembly","Instance","instance","Module","instantiate","instantiateStreaming","_exports","exports","FinalizationRegistry","rubyShowVersion","rubyInit","rubySysinit","arg0","vec1","len1","result1","base","ptr0","len0","setInt32","rubyOptions","rubyScript","rubyInitLoadpath","rbEvalStringProtect","getInt32","rbFuncallvProtect","arg1","arg2","obj0","vec2","len2","result2","rbIntern","rbErrinfo","rbClearErrinfo","rstringPtr","ptr1","decode","rbVmBugreport","rbGcEnable","rbGcDisable","rbSetShouldProhibitRewind","wasm_val","_obj","_refcnt","register","unregister","dtor","$808b0f284ad35151$export$d919f437fe5c5cf3","interfaceState","hasJSFrameAfterRbFrame","guest","excluded","key","getOwnPropertyNames","includes","args","oldShouldProhibitRewind","oldIsDisabledGc","result","Reflect","proxyExports","transport","$808b0f284ad35151$var$JsValueTransport","exceptionFormatter","$808b0f284ad35151$var$RbExceptionFormatter","initialize","c_args","arg","async","imports1","wrapTry","f","e","$808b0f284ad35151$export$4cfdd59320ca32d1","rb_wasm_throw_prohibit_rewind_exception","messagePtr","messageLen","str","get_export","result0","variant1","evalJs","setInt8","resources0","isJs","instanceOf","ret0","globalThis","intToJsNumber","floatToJsNumber","stringToJsString","bool0","boolToJsBool","procToJsFunction","rbObjectToJsRbValue","jsValueToString","jsValueToInteger","setFloat64","exportJsValueToHost","importJsValueFromHost","jsValueTypeof","jsValueEqual","jsValueStrictlyEqual","arg3","arg4","base0","reflectApply","reflectConstruct","reflectDeleteProperty","reflectGet","reflectGetOwnPropertyDescriptor","reflectGetPrototypeOf","reflectHas","reflectIsExtensible","vec0","reflectOwnKeys","reflectPreventExtensions","reflectSet","reflectSetPrototypeOf","dropJsAbiValue","$808b0f284ad35151$var$addRbJsAbiHostToImports","entries","oldValue","proxyImports","code","Function","$parcel$global","window","rawRbAbiValue","rbValue","rbValueOfPointer","call","wrap","String","takeJsValue","consumeJsValue","klass","lhs","rhs","thisArgument","propertyKey","printVersion","eval","$808b0f284ad35151$var$evalRbCode","privateObject","evalAsync","JS","reject","error","$808b0f284ad35151$export$a25cc2e29c199159","format","importJsValue","pointer","abiValue","$808b0f284ad35151$export$3a79e18eccff138a","_takenJsValue","exportJsValue","vm","callee","innerArgs","$808b0f284ad35151$var$callRbMethod","toPrimitive","hint","rbString","toJS","jsValue","$808b0f284ad35151$var$ruby_tag_type","ruby_tag_type","literalsCache","zeroLiteral","oneLiteral","newLineLiteral","zeroOneNewLine","backtrace","formatString","firstLine","restLines","$808b0f284ad35151$var$checkStatusTag","rawTag","Mask","None","Return","Next","Break","Redo","Retry","Throw","Raise","Fatal","$808b0f284ad35151$var$wrapRbOperation","body","RuntimeError","recv","mid","status","$784412bc38a4a9f9$export$2706b0bc26786311","consume","shift","pressed","$ebd13c2f502adf3f$export$f5a5987519ea0f4d","rootFs","rootContents","wasi","inst","_start","_initialize","env","fds","debug","wasiImport","args_sizes_get","argc","argv_buf_size","buf_size","args_get","argv","argv_buf","buffer8","orig_argv_buf","environ_sizes_get","environ_count","environ_size","environ","environ_get","environ_buf","orig_environ_buf","clock_res_get","res_ptr","clock_time_get","precision","time","Date","getTime","monotonic_time","round","performance","now","fd","fdstat_ptr","filestat_ptr","iovs_ptr","iovs_len","nread_ptr","read_bytes_array","buf_ptr","path_ptr","path_len","nwritten_ptr","fd_readdir","bufused_ptr","bufused","head_bytes","fd_renumber","to","offset_out_ptr","offset_out","setBigInt64","offset_ptr","old_path_ptr","old_path_len","new_path_ptr","new_path_len","opened_fd_ptr","opened_fd","poll_oneoff","in_","out","nsubscriptions","proc_exit","exit_code","proc_raise","sig","sched_yield","random_get","random","sock_recv","ri_data","ri_flags","sock_send","si_data","si_flags","sock_shutdown","how","sock_accept","keyEventConsumer","computeOptions","optionsArray","ROMS","opt","rom","render","playAudio","progress","remoteRender","remotePlayAudio","kind","response","fetch","arrayBuffer","wasi_snapshot_preview1","setInstance","tickVideo","headless","bytes","videoBytes","tickAudio","Int16Array","audioBytes","option","join","run","setTimeout","pushKeyEvent","fetchKeyEvent","event","WorkerGlobalScope","optcarrot","Optcarrot","init","$ebd13c2f502adf3f$var$main"],"version":3,"file":"optcarrot.worker.3977d21b.js.map"}